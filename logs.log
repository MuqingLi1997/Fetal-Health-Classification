2023-04-26 14:39:41,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-26 14:39:41,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-26 14:39:41,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-26 14:39:41,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-26 14:39:43,344:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-26 14:51:49,326:INFO:PyCaret ClassificationExperiment
2023-04-26 14:51:49,326:INFO:Logging name: clf-default-name
2023-04-26 14:51:49,326:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-26 14:51:49,326:INFO:version 3.0.0
2023-04-26 14:51:49,326:INFO:Initializing setup()
2023-04-26 14:51:49,326:INFO:self.USI: c9db
2023-04-26 14:51:49,326:INFO:self._variable_keys: {'_ml_usecase', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param', 'pipeline', 'exp_name_log', 'X_test', 'is_multiclass', 'gpu_param', 'idx', 'data', 'X_train', 'target_param', 'seed', 'log_plots_param', 'y_test', '_available_plots', 'fold_generator', 'y', 'gpu_n_jobs_param', 'html_param', 'y_train', 'USI', 'exp_id', 'memory', 'logging_param', 'X', 'fix_imbalance'}
2023-04-26 14:51:49,326:INFO:Checking environment
2023-04-26 14:51:49,326:INFO:python_version: 3.10.6
2023-04-26 14:51:49,326:INFO:python_build: ('main', 'Oct 24 2022 11:04:34')
2023-04-26 14:51:49,326:INFO:machine: x86_64
2023-04-26 14:51:49,326:INFO:platform: macOS-10.16-x86_64-i386-64bit
2023-04-26 14:51:49,326:INFO:Memory: svmem(total=17179869184, available=1278840832, percent=92.6, used=2019360768, free=31936512, active=1247797248, inactive=1243590656, wired=771563520)
2023-04-26 14:51:49,326:INFO:Physical Core: 8
2023-04-26 14:51:49,326:INFO:Logical Core: 8
2023-04-26 14:51:49,326:INFO:Checking libraries
2023-04-26 14:51:49,326:INFO:System:
2023-04-26 14:51:49,326:INFO:    python: 3.10.6 (main, Oct 24 2022, 11:04:34) [Clang 12.0.0 ]
2023-04-26 14:51:49,326:INFO:executable: /Users/limuqing/opt/anaconda3/envs/ANLY590/bin/python
2023-04-26 14:51:49,326:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2023-04-26 14:51:49,326:INFO:PyCaret required dependencies:
2023-04-26 14:51:49,327:INFO:                 pip: 22.2.2
2023-04-26 14:51:49,327:INFO:          setuptools: 65.4.0
2023-04-26 14:51:49,327:INFO:             pycaret: 3.0.0
2023-04-26 14:51:49,327:INFO:             IPython: 8.4.0
2023-04-26 14:51:49,327:INFO:          ipywidgets: 8.0.6
2023-04-26 14:51:49,327:INFO:                tqdm: 4.64.1
2023-04-26 14:51:49,327:INFO:               numpy: 1.21.5
2023-04-26 14:51:49,327:INFO:              pandas: 1.4.2
2023-04-26 14:51:49,327:INFO:              jinja2: 3.1.2
2023-04-26 14:51:49,327:INFO:               scipy: 1.7.3
2023-04-26 14:51:49,327:INFO:              joblib: 1.2.0
2023-04-26 14:51:49,327:INFO:             sklearn: 1.1.2
2023-04-26 14:51:49,327:INFO:                pyod: 1.0.9
2023-04-26 14:51:49,327:INFO:            imblearn: 0.10.1
2023-04-26 14:51:49,327:INFO:   category_encoders: 2.6.0
2023-04-26 14:51:49,327:INFO:            lightgbm: 3.3.5
2023-04-26 14:51:49,327:INFO:               numba: 0.56.4
2023-04-26 14:51:49,327:INFO:            requests: 2.28.1
2023-04-26 14:51:49,327:INFO:          matplotlib: 3.5.3
2023-04-26 14:51:49,327:INFO:          scikitplot: 0.3.7
2023-04-26 14:51:49,327:INFO:         yellowbrick: 1.5
2023-04-26 14:51:49,327:INFO:              plotly: 5.9.0
2023-04-26 14:51:49,327:INFO:             kaleido: 0.2.1
2023-04-26 14:51:49,327:INFO:         statsmodels: 0.13.2
2023-04-26 14:51:49,327:INFO:              sktime: 0.17.2
2023-04-26 14:51:49,327:INFO:               tbats: 1.1.3
2023-04-26 14:51:49,327:INFO:            pmdarima: 2.0.3
2023-04-26 14:51:49,327:INFO:              psutil: 5.9.0
2023-04-26 14:51:49,327:INFO:PyCaret optional dependencies:
2023-04-26 14:51:49,340:INFO:                shap: Not installed
2023-04-26 14:51:49,340:INFO:           interpret: Not installed
2023-04-26 14:51:49,340:INFO:                umap: Not installed
2023-04-26 14:51:49,340:INFO:    pandas_profiling: 3.4.0
2023-04-26 14:51:49,340:INFO:  explainerdashboard: Not installed
2023-04-26 14:51:49,340:INFO:             autoviz: 0.1.601
2023-04-26 14:51:49,340:INFO:           fairlearn: Not installed
2023-04-26 14:51:49,340:INFO:             xgboost: 1.7.3
2023-04-26 14:51:49,340:INFO:            catboost: Not installed
2023-04-26 14:51:49,340:INFO:              kmodes: Not installed
2023-04-26 14:51:49,340:INFO:             mlxtend: Not installed
2023-04-26 14:51:49,340:INFO:       statsforecast: Not installed
2023-04-26 14:51:49,340:INFO:        tune_sklearn: Not installed
2023-04-26 14:51:49,340:INFO:                 ray: Not installed
2023-04-26 14:51:49,340:INFO:            hyperopt: Not installed
2023-04-26 14:51:49,340:INFO:              optuna: Not installed
2023-04-26 14:51:49,340:INFO:               skopt: Not installed
2023-04-26 14:51:49,340:INFO:              mlflow: Not installed
2023-04-26 14:51:49,340:INFO:              gradio: Not installed
2023-04-26 14:51:49,340:INFO:             fastapi: Not installed
2023-04-26 14:51:49,340:INFO:             uvicorn: Not installed
2023-04-26 14:51:49,340:INFO:              m2cgen: Not installed
2023-04-26 14:51:49,340:INFO:           evidently: Not installed
2023-04-26 14:51:49,341:INFO:               fugue: Not installed
2023-04-26 14:51:49,341:INFO:           streamlit: Not installed
2023-04-26 14:51:49,341:INFO:             prophet: Not installed
2023-04-26 14:51:49,341:INFO:None
2023-04-26 14:51:49,341:INFO:Set up data.
2023-04-26 14:51:49,352:INFO:Set up train/test split.
2023-04-26 14:51:49,359:INFO:Set up index.
2023-04-26 14:51:49,359:INFO:Set up folding strategy.
2023-04-26 14:51:49,359:INFO:Assigning column types.
2023-04-26 14:51:49,361:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-26 14:51:49,398:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-26 14:51:49,401:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-26 14:51:49,429:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 14:51:49,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 14:51:49,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-26 14:51:49,535:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-26 14:51:49,557:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 14:51:49,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 14:51:49,560:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-26 14:51:49,596:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-26 14:51:49,618:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 14:51:49,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 14:51:49,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-26 14:51:49,679:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 14:51:49,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 14:51:49,681:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-26 14:51:49,740:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 14:51:49,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 14:51:49,801:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 14:51:49,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 14:51:49,805:INFO:Preparing preprocessing pipeline...
2023-04-26 14:51:49,807:INFO:Set up label encoding.
2023-04-26 14:51:49,807:INFO:Set up simple imputation.
2023-04-26 14:51:49,807:INFO:Set up feature normalization.
2023-04-26 14:51:49,808:INFO:Set up column name cleaning.
2023-04-26 14:51:49,836:INFO:Finished creating preprocessing pipeline.
2023-04-26 14:51:49,842:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/k4/s8f00krn1f70p5gvf3wgc2tr0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['baseline value', 'accelerations',
                                             'fetal_movement',
                                             'uterine_contractions',
                                             'light_decele...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-26 14:51:49,842:INFO:Creating final display dataframe.
2023-04-26 14:51:49,905:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target            fetal_health
2                   Target type              Multiclass
3                Target mapping  1.0: 0, 2.0: 1, 3.0: 2
4           Original data shape              (3966, 22)
5        Transformed data shape              (3966, 22)
6   Transformed train set shape              (2776, 22)
7    Transformed test set shape              (1190, 22)
8              Numeric features                      21
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                    Normalize                    True
14             Normalize method                  zscore
15               Fold Generator         StratifiedKFold
16                  Fold Number                      10
17                     CPU Jobs                      -1
18                      Use GPU                   False
19               Log Experiment                   False
20              Experiment Name        clf-default-name
21                          USI                    c9db
2023-04-26 14:51:49,972:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 14:51:49,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 14:51:50,032:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 14:51:50,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 14:51:50,035:INFO:setup() successfully completed in 0.71s...............
2023-04-26 14:52:08,122:INFO:Initializing compare_models()
2023-04-26 14:52:08,123:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-26 14:52:08,123:INFO:Checking exceptions
2023-04-26 14:52:08,127:INFO:Preparing display monitor
2023-04-26 14:52:08,363:INFO:Initializing Logistic Regression
2023-04-26 14:52:08,363:INFO:Total runtime is 6.584326426188151e-06 minutes
2023-04-26 14:52:08,365:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:08,366:INFO:Initializing create_model()
2023-04-26 14:52:08,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:08,366:INFO:Checking exceptions
2023-04-26 14:52:08,366:INFO:Importing libraries
2023-04-26 14:52:08,367:INFO:Copying training dataset
2023-04-26 14:52:08,371:INFO:Defining folds
2023-04-26 14:52:08,371:INFO:Declaring metric variables
2023-04-26 14:52:08,373:INFO:Importing untrained model
2023-04-26 14:52:08,376:INFO:Logistic Regression Imported successfully
2023-04-26 14:52:08,382:INFO:Starting cross validation
2023-04-26 14:52:08,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:12,333:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,334:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,334:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,335:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,335:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,336:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,337:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,338:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,339:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,344:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,347:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,348:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,348:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,349:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,353:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,354:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,355:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,356:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,356:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,357:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,357:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,377:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,378:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,380:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,470:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,471:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,472:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,474:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,476:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,476:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,480:INFO:Calculating mean and std
2023-04-26 14:52:12,484:INFO:Creating metrics dataframe
2023-04-26 14:52:12,490:INFO:Uploading results into container
2023-04-26 14:52:12,491:INFO:Uploading model into container now
2023-04-26 14:52:12,492:INFO:_master_model_container: 1
2023-04-26 14:52:12,492:INFO:_display_container: 2
2023-04-26 14:52:12,492:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-26 14:52:12,492:INFO:create_model() successfully completed......................................
2023-04-26 14:52:12,718:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:12,718:INFO:Creating metrics dataframe
2023-04-26 14:52:12,724:INFO:Initializing K Neighbors Classifier
2023-04-26 14:52:12,724:INFO:Total runtime is 0.07268815040588378 minutes
2023-04-26 14:52:12,726:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:12,726:INFO:Initializing create_model()
2023-04-26 14:52:12,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:12,726:INFO:Checking exceptions
2023-04-26 14:52:12,726:INFO:Importing libraries
2023-04-26 14:52:12,726:INFO:Copying training dataset
2023-04-26 14:52:12,730:INFO:Defining folds
2023-04-26 14:52:12,730:INFO:Declaring metric variables
2023-04-26 14:52:12,732:INFO:Importing untrained model
2023-04-26 14:52:12,734:INFO:K Neighbors Classifier Imported successfully
2023-04-26 14:52:12,738:INFO:Starting cross validation
2023-04-26 14:52:12,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:12,867:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,868:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,869:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,869:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,870:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,871:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,871:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,873:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,874:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,878:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,879:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,880:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,885:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,886:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,888:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,889:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,890:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,891:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,892:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,893:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,894:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,936:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,938:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,939:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,949:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,950:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,951:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,954:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,955:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,956:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:12,959:INFO:Calculating mean and std
2023-04-26 14:52:12,960:INFO:Creating metrics dataframe
2023-04-26 14:52:12,963:INFO:Uploading results into container
2023-04-26 14:52:12,963:INFO:Uploading model into container now
2023-04-26 14:52:12,964:INFO:_master_model_container: 2
2023-04-26 14:52:12,964:INFO:_display_container: 2
2023-04-26 14:52:12,964:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-26 14:52:12,964:INFO:create_model() successfully completed......................................
2023-04-26 14:52:13,075:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:13,075:INFO:Creating metrics dataframe
2023-04-26 14:52:13,081:INFO:Initializing Naive Bayes
2023-04-26 14:52:13,081:INFO:Total runtime is 0.07864048480987548 minutes
2023-04-26 14:52:13,083:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:13,083:INFO:Initializing create_model()
2023-04-26 14:52:13,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:13,083:INFO:Checking exceptions
2023-04-26 14:52:13,083:INFO:Importing libraries
2023-04-26 14:52:13,083:INFO:Copying training dataset
2023-04-26 14:52:13,086:INFO:Defining folds
2023-04-26 14:52:13,086:INFO:Declaring metric variables
2023-04-26 14:52:13,088:INFO:Importing untrained model
2023-04-26 14:52:13,090:INFO:Naive Bayes Imported successfully
2023-04-26 14:52:13,094:INFO:Starting cross validation
2023-04-26 14:52:13,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:13,162:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,163:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,164:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,166:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,167:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,168:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,174:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,176:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,177:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,178:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,178:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,183:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,186:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,188:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,189:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,200:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,201:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,202:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,204:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,205:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,206:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,216:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,217:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,218:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,226:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,227:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,228:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,237:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,238:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,239:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,242:INFO:Calculating mean and std
2023-04-26 14:52:13,243:INFO:Creating metrics dataframe
2023-04-26 14:52:13,247:INFO:Uploading results into container
2023-04-26 14:52:13,247:INFO:Uploading model into container now
2023-04-26 14:52:13,247:INFO:_master_model_container: 3
2023-04-26 14:52:13,247:INFO:_display_container: 2
2023-04-26 14:52:13,247:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-26 14:52:13,247:INFO:create_model() successfully completed......................................
2023-04-26 14:52:13,359:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:13,359:INFO:Creating metrics dataframe
2023-04-26 14:52:13,365:INFO:Initializing Decision Tree Classifier
2023-04-26 14:52:13,365:INFO:Total runtime is 0.08338160514831543 minutes
2023-04-26 14:52:13,367:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:13,367:INFO:Initializing create_model()
2023-04-26 14:52:13,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:13,368:INFO:Checking exceptions
2023-04-26 14:52:13,368:INFO:Importing libraries
2023-04-26 14:52:13,368:INFO:Copying training dataset
2023-04-26 14:52:13,371:INFO:Defining folds
2023-04-26 14:52:13,371:INFO:Declaring metric variables
2023-04-26 14:52:13,373:INFO:Importing untrained model
2023-04-26 14:52:13,375:INFO:Decision Tree Classifier Imported successfully
2023-04-26 14:52:13,379:INFO:Starting cross validation
2023-04-26 14:52:13,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:13,480:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,481:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,482:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,482:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,485:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,486:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,487:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,487:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,494:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,496:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,497:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,498:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,498:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,499:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,500:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,505:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,507:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,508:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,513:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,514:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,515:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,534:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,535:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,536:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,562:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,563:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,564:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,567:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,569:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,569:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,572:INFO:Calculating mean and std
2023-04-26 14:52:13,574:INFO:Creating metrics dataframe
2023-04-26 14:52:13,577:INFO:Uploading results into container
2023-04-26 14:52:13,577:INFO:Uploading model into container now
2023-04-26 14:52:13,577:INFO:_master_model_container: 4
2023-04-26 14:52:13,577:INFO:_display_container: 2
2023-04-26 14:52:13,577:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-26 14:52:13,578:INFO:create_model() successfully completed......................................
2023-04-26 14:52:13,689:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:13,689:INFO:Creating metrics dataframe
2023-04-26 14:52:13,696:INFO:Initializing SVM - Linear Kernel
2023-04-26 14:52:13,696:INFO:Total runtime is 0.08888491789499918 minutes
2023-04-26 14:52:13,698:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:13,698:INFO:Initializing create_model()
2023-04-26 14:52:13,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:13,698:INFO:Checking exceptions
2023-04-26 14:52:13,698:INFO:Importing libraries
2023-04-26 14:52:13,698:INFO:Copying training dataset
2023-04-26 14:52:13,701:INFO:Defining folds
2023-04-26 14:52:13,702:INFO:Declaring metric variables
2023-04-26 14:52:13,703:INFO:Importing untrained model
2023-04-26 14:52:13,705:INFO:SVM - Linear Kernel Imported successfully
2023-04-26 14:52:13,709:INFO:Starting cross validation
2023-04-26 14:52:13,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:13,794:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,795:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,796:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,797:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,805:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,805:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,807:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,808:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,810:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,810:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,810:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,811:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,811:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,813:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,813:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,814:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,814:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,815:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,818:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,819:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,819:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,820:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,821:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,821:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,822:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,822:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,823:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,824:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,845:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,846:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,847:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,848:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,867:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,868:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,869:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 14:52:13,869:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,869:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,870:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,870:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,871:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:13,874:INFO:Calculating mean and std
2023-04-26 14:52:13,876:INFO:Creating metrics dataframe
2023-04-26 14:52:13,879:INFO:Uploading results into container
2023-04-26 14:52:13,879:INFO:Uploading model into container now
2023-04-26 14:52:13,879:INFO:_master_model_container: 5
2023-04-26 14:52:13,879:INFO:_display_container: 2
2023-04-26 14:52:13,880:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-26 14:52:13,880:INFO:create_model() successfully completed......................................
2023-04-26 14:52:13,992:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:13,992:INFO:Creating metrics dataframe
2023-04-26 14:52:13,999:INFO:Initializing Ridge Classifier
2023-04-26 14:52:13,999:INFO:Total runtime is 0.09394036928812662 minutes
2023-04-26 14:52:14,001:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:14,001:INFO:Initializing create_model()
2023-04-26 14:52:14,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:14,001:INFO:Checking exceptions
2023-04-26 14:52:14,001:INFO:Importing libraries
2023-04-26 14:52:14,001:INFO:Copying training dataset
2023-04-26 14:52:14,005:INFO:Defining folds
2023-04-26 14:52:14,005:INFO:Declaring metric variables
2023-04-26 14:52:14,007:INFO:Importing untrained model
2023-04-26 14:52:14,009:INFO:Ridge Classifier Imported successfully
2023-04-26 14:52:14,012:INFO:Starting cross validation
2023-04-26 14:52:14,013:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:14,076:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,077:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,078:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,079:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,079:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,080:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,082:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,083:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,084:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,085:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,085:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,085:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,086:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,087:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,088:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,090:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,090:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,091:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,092:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,097:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,097:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,098:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,099:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,112:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,113:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,114:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,115:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,118:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,119:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,120:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,121:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,128:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,128:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 14:52:14,129:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,129:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,130:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,130:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,131:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,131:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:14,134:INFO:Calculating mean and std
2023-04-26 14:52:14,135:INFO:Creating metrics dataframe
2023-04-26 14:52:14,138:INFO:Uploading results into container
2023-04-26 14:52:14,139:INFO:Uploading model into container now
2023-04-26 14:52:14,139:INFO:_master_model_container: 6
2023-04-26 14:52:14,139:INFO:_display_container: 2
2023-04-26 14:52:14,139:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-26 14:52:14,139:INFO:create_model() successfully completed......................................
2023-04-26 14:52:14,254:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:14,254:INFO:Creating metrics dataframe
2023-04-26 14:52:14,261:INFO:Initializing Random Forest Classifier
2023-04-26 14:52:14,261:INFO:Total runtime is 0.09831356604894001 minutes
2023-04-26 14:52:14,263:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:14,263:INFO:Initializing create_model()
2023-04-26 14:52:14,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:14,264:INFO:Checking exceptions
2023-04-26 14:52:14,264:INFO:Importing libraries
2023-04-26 14:52:14,264:INFO:Copying training dataset
2023-04-26 14:52:14,267:INFO:Defining folds
2023-04-26 14:52:14,267:INFO:Declaring metric variables
2023-04-26 14:52:14,269:INFO:Importing untrained model
2023-04-26 14:52:14,271:INFO:Random Forest Classifier Imported successfully
2023-04-26 14:52:14,274:INFO:Starting cross validation
2023-04-26 14:52:14,275:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:15,079:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,080:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,086:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,087:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,088:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,103:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,104:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,105:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,105:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,106:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,107:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,112:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,113:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,114:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,139:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,141:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,143:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,164:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,165:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,166:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,228:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,230:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,231:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,523:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,524:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,524:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,525:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,525:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,526:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,529:INFO:Calculating mean and std
2023-04-26 14:52:15,531:INFO:Creating metrics dataframe
2023-04-26 14:52:15,536:INFO:Uploading results into container
2023-04-26 14:52:15,536:INFO:Uploading model into container now
2023-04-26 14:52:15,536:INFO:_master_model_container: 7
2023-04-26 14:52:15,536:INFO:_display_container: 2
2023-04-26 14:52:15,537:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-26 14:52:15,537:INFO:create_model() successfully completed......................................
2023-04-26 14:52:15,649:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:15,649:INFO:Creating metrics dataframe
2023-04-26 14:52:15,656:INFO:Initializing Quadratic Discriminant Analysis
2023-04-26 14:52:15,656:INFO:Total runtime is 0.12155543565750121 minutes
2023-04-26 14:52:15,658:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:15,658:INFO:Initializing create_model()
2023-04-26 14:52:15,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:15,658:INFO:Checking exceptions
2023-04-26 14:52:15,658:INFO:Importing libraries
2023-04-26 14:52:15,658:INFO:Copying training dataset
2023-04-26 14:52:15,661:INFO:Defining folds
2023-04-26 14:52:15,662:INFO:Declaring metric variables
2023-04-26 14:52:15,664:INFO:Importing untrained model
2023-04-26 14:52:15,666:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-26 14:52:15,670:INFO:Starting cross validation
2023-04-26 14:52:15,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:15,717:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,717:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,721:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,727:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,733:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,737:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,746:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,749:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,750:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,751:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,757:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,758:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,758:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,759:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,759:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,760:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,771:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,772:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,772:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,773:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,773:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,773:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,774:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,781:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,782:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,783:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,783:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,784:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,785:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,786:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,794:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 14:52:15,802:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,804:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,805:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,813:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,814:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,815:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,823:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,825:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,826:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:15,828:INFO:Calculating mean and std
2023-04-26 14:52:15,830:INFO:Creating metrics dataframe
2023-04-26 14:52:15,835:INFO:Uploading results into container
2023-04-26 14:52:15,835:INFO:Uploading model into container now
2023-04-26 14:52:15,836:INFO:_master_model_container: 8
2023-04-26 14:52:15,836:INFO:_display_container: 2
2023-04-26 14:52:15,836:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-26 14:52:15,836:INFO:create_model() successfully completed......................................
2023-04-26 14:52:15,947:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:15,947:INFO:Creating metrics dataframe
2023-04-26 14:52:15,954:INFO:Initializing Ada Boost Classifier
2023-04-26 14:52:15,954:INFO:Total runtime is 0.12652085224787393 minutes
2023-04-26 14:52:15,956:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:15,957:INFO:Initializing create_model()
2023-04-26 14:52:15,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:15,957:INFO:Checking exceptions
2023-04-26 14:52:15,957:INFO:Importing libraries
2023-04-26 14:52:15,957:INFO:Copying training dataset
2023-04-26 14:52:15,960:INFO:Defining folds
2023-04-26 14:52:15,960:INFO:Declaring metric variables
2023-04-26 14:52:15,962:INFO:Importing untrained model
2023-04-26 14:52:15,965:INFO:Ada Boost Classifier Imported successfully
2023-04-26 14:52:15,969:INFO:Starting cross validation
2023-04-26 14:52:15,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:16,370:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,374:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,375:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,385:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,386:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,387:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,387:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,388:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,389:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,389:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,390:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,391:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,394:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,395:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,395:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,396:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,396:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,397:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,403:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,404:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,405:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,423:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,424:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,425:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,712:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,713:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,714:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,719:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,720:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,721:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:16,724:INFO:Calculating mean and std
2023-04-26 14:52:16,725:INFO:Creating metrics dataframe
2023-04-26 14:52:16,732:INFO:Uploading results into container
2023-04-26 14:52:16,732:INFO:Uploading model into container now
2023-04-26 14:52:16,733:INFO:_master_model_container: 9
2023-04-26 14:52:16,733:INFO:_display_container: 2
2023-04-26 14:52:16,733:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-26 14:52:16,733:INFO:create_model() successfully completed......................................
2023-04-26 14:52:16,844:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:16,844:INFO:Creating metrics dataframe
2023-04-26 14:52:16,852:INFO:Initializing Gradient Boosting Classifier
2023-04-26 14:52:16,852:INFO:Total runtime is 0.14148525396982828 minutes
2023-04-26 14:52:16,854:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:16,854:INFO:Initializing create_model()
2023-04-26 14:52:16,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:16,854:INFO:Checking exceptions
2023-04-26 14:52:16,854:INFO:Importing libraries
2023-04-26 14:52:16,854:INFO:Copying training dataset
2023-04-26 14:52:16,857:INFO:Defining folds
2023-04-26 14:52:16,858:INFO:Declaring metric variables
2023-04-26 14:52:16,860:INFO:Importing untrained model
2023-04-26 14:52:16,862:INFO:Gradient Boosting Classifier Imported successfully
2023-04-26 14:52:16,865:INFO:Starting cross validation
2023-04-26 14:52:16,866:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:19,973:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:19,974:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:19,975:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:19,984:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:19,985:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:19,986:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:19,990:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:19,991:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:19,992:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,017:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,018:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,019:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,056:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,057:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,058:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,073:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,075:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,076:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,128:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,129:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,130:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,181:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,182:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:20,183:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,434:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,435:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,436:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,439:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,440:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,441:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,444:INFO:Calculating mean and std
2023-04-26 14:52:22,445:INFO:Creating metrics dataframe
2023-04-26 14:52:22,454:INFO:Uploading results into container
2023-04-26 14:52:22,454:INFO:Uploading model into container now
2023-04-26 14:52:22,455:INFO:_master_model_container: 10
2023-04-26 14:52:22,455:INFO:_display_container: 2
2023-04-26 14:52:22,455:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-26 14:52:22,455:INFO:create_model() successfully completed......................................
2023-04-26 14:52:22,567:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:22,567:INFO:Creating metrics dataframe
2023-04-26 14:52:22,574:INFO:Initializing Linear Discriminant Analysis
2023-04-26 14:52:22,574:INFO:Total runtime is 0.2368633190790812 minutes
2023-04-26 14:52:22,576:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:22,576:INFO:Initializing create_model()
2023-04-26 14:52:22,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:22,576:INFO:Checking exceptions
2023-04-26 14:52:22,577:INFO:Importing libraries
2023-04-26 14:52:22,577:INFO:Copying training dataset
2023-04-26 14:52:22,580:INFO:Defining folds
2023-04-26 14:52:22,580:INFO:Declaring metric variables
2023-04-26 14:52:22,582:INFO:Importing untrained model
2023-04-26 14:52:22,584:INFO:Linear Discriminant Analysis Imported successfully
2023-04-26 14:52:22,587:INFO:Starting cross validation
2023-04-26 14:52:22,588:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:22,659:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,660:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,661:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,665:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,666:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,667:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,669:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,670:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,671:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,678:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,679:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,680:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,691:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,692:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,693:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,704:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,705:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,706:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,711:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,712:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,713:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,729:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,730:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,731:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,736:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,737:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,738:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,745:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,746:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,747:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:22,750:INFO:Calculating mean and std
2023-04-26 14:52:22,751:INFO:Creating metrics dataframe
2023-04-26 14:52:22,761:INFO:Uploading results into container
2023-04-26 14:52:22,762:INFO:Uploading model into container now
2023-04-26 14:52:22,762:INFO:_master_model_container: 11
2023-04-26 14:52:22,762:INFO:_display_container: 2
2023-04-26 14:52:22,762:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-26 14:52:22,762:INFO:create_model() successfully completed......................................
2023-04-26 14:52:22,873:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:22,873:INFO:Creating metrics dataframe
2023-04-26 14:52:22,881:INFO:Initializing Extra Trees Classifier
2023-04-26 14:52:22,881:INFO:Total runtime is 0.2419774532318115 minutes
2023-04-26 14:52:22,883:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:22,884:INFO:Initializing create_model()
2023-04-26 14:52:22,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:22,884:INFO:Checking exceptions
2023-04-26 14:52:22,884:INFO:Importing libraries
2023-04-26 14:52:22,884:INFO:Copying training dataset
2023-04-26 14:52:22,887:INFO:Defining folds
2023-04-26 14:52:22,887:INFO:Declaring metric variables
2023-04-26 14:52:22,889:INFO:Importing untrained model
2023-04-26 14:52:22,891:INFO:Extra Trees Classifier Imported successfully
2023-04-26 14:52:22,895:INFO:Starting cross validation
2023-04-26 14:52:22,896:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:23,429:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,430:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,431:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,443:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,443:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,444:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,444:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,445:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,445:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,464:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,466:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,467:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,474:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,476:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,476:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,477:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,477:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,478:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,487:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,488:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,489:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,547:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,548:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,549:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,812:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,813:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,814:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,820:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,821:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,822:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:23,825:INFO:Calculating mean and std
2023-04-26 14:52:23,826:INFO:Creating metrics dataframe
2023-04-26 14:52:23,838:INFO:Uploading results into container
2023-04-26 14:52:23,838:INFO:Uploading model into container now
2023-04-26 14:52:23,839:INFO:_master_model_container: 12
2023-04-26 14:52:23,839:INFO:_display_container: 2
2023-04-26 14:52:23,839:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-26 14:52:23,839:INFO:create_model() successfully completed......................................
2023-04-26 14:52:23,951:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:23,951:INFO:Creating metrics dataframe
2023-04-26 14:52:23,959:INFO:Initializing Extreme Gradient Boosting
2023-04-26 14:52:23,959:INFO:Total runtime is 0.25994510253270464 minutes
2023-04-26 14:52:23,961:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:23,961:INFO:Initializing create_model()
2023-04-26 14:52:23,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:23,961:INFO:Checking exceptions
2023-04-26 14:52:23,962:INFO:Importing libraries
2023-04-26 14:52:23,962:INFO:Copying training dataset
2023-04-26 14:52:23,965:INFO:Defining folds
2023-04-26 14:52:23,965:INFO:Declaring metric variables
2023-04-26 14:52:23,967:INFO:Importing untrained model
2023-04-26 14:52:23,969:INFO:Extreme Gradient Boosting Imported successfully
2023-04-26 14:52:23,973:INFO:Starting cross validation
2023-04-26 14:52:23,974:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:25,309:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,310:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,311:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,312:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,313:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,317:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,318:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,320:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,321:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,321:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,322:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,323:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,335:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,336:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,337:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,338:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,339:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,339:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,340:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,341:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,341:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,356:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,357:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:25,358:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:26,347:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:26,348:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:26,349:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:26,354:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:26,355:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:26,356:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:26,359:INFO:Calculating mean and std
2023-04-26 14:52:26,360:INFO:Creating metrics dataframe
2023-04-26 14:52:26,372:INFO:Uploading results into container
2023-04-26 14:52:26,373:INFO:Uploading model into container now
2023-04-26 14:52:26,373:INFO:_master_model_container: 13
2023-04-26 14:52:26,373:INFO:_display_container: 2
2023-04-26 14:52:26,374:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-26 14:52:26,374:INFO:create_model() successfully completed......................................
2023-04-26 14:52:26,485:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:26,485:INFO:Creating metrics dataframe
2023-04-26 14:52:26,493:INFO:Initializing Light Gradient Boosting Machine
2023-04-26 14:52:26,493:INFO:Total runtime is 0.3021758516629537 minutes
2023-04-26 14:52:26,495:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:26,495:INFO:Initializing create_model()
2023-04-26 14:52:26,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:26,495:INFO:Checking exceptions
2023-04-26 14:52:26,495:INFO:Importing libraries
2023-04-26 14:52:26,495:INFO:Copying training dataset
2023-04-26 14:52:26,499:INFO:Defining folds
2023-04-26 14:52:26,499:INFO:Declaring metric variables
2023-04-26 14:52:26,501:INFO:Importing untrained model
2023-04-26 14:52:26,503:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-26 14:52:26,507:INFO:Starting cross validation
2023-04-26 14:52:26,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:27,545:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,546:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,547:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,547:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,548:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,548:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,549:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,549:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,550:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,551:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,555:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,556:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,557:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,567:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,568:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,569:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,569:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,571:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,577:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,581:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,583:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,598:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,599:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:27,600:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,053:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,054:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,055:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,057:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,058:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,059:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,064:INFO:Calculating mean and std
2023-04-26 14:52:28,065:INFO:Creating metrics dataframe
2023-04-26 14:52:28,080:INFO:Uploading results into container
2023-04-26 14:52:28,080:INFO:Uploading model into container now
2023-04-26 14:52:28,080:INFO:_master_model_container: 14
2023-04-26 14:52:28,080:INFO:_display_container: 2
2023-04-26 14:52:28,081:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 14:52:28,081:INFO:create_model() successfully completed......................................
2023-04-26 14:52:28,192:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:28,192:INFO:Creating metrics dataframe
2023-04-26 14:52:28,200:INFO:Initializing Dummy Classifier
2023-04-26 14:52:28,200:INFO:Total runtime is 0.3306291858355204 minutes
2023-04-26 14:52:28,202:INFO:SubProcess create_model() called ==================================
2023-04-26 14:52:28,202:INFO:Initializing create_model()
2023-04-26 14:52:28,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f9494bb87c0>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:28,202:INFO:Checking exceptions
2023-04-26 14:52:28,202:INFO:Importing libraries
2023-04-26 14:52:28,202:INFO:Copying training dataset
2023-04-26 14:52:28,206:INFO:Defining folds
2023-04-26 14:52:28,206:INFO:Declaring metric variables
2023-04-26 14:52:28,208:INFO:Importing untrained model
2023-04-26 14:52:28,210:INFO:Dummy Classifier Imported successfully
2023-04-26 14:52:28,213:INFO:Starting cross validation
2023-04-26 14:52:28,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 14:52:28,275:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,276:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,276:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,277:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,278:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,279:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,279:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,280:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,283:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,284:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,284:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,285:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,285:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,288:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,288:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,289:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,305:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,306:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,307:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,307:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,310:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,311:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,312:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,312:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,331:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,333:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,333:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,334:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,337:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,338:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,339:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,339:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,345:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,346:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,347:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,347:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,352:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,353:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,353:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 14:52:28,354:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 14:52:28,356:INFO:Calculating mean and std
2023-04-26 14:52:28,358:INFO:Creating metrics dataframe
2023-04-26 14:52:28,371:INFO:Uploading results into container
2023-04-26 14:52:28,372:INFO:Uploading model into container now
2023-04-26 14:52:28,372:INFO:_master_model_container: 15
2023-04-26 14:52:28,372:INFO:_display_container: 2
2023-04-26 14:52:28,372:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-26 14:52:28,372:INFO:create_model() successfully completed......................................
2023-04-26 14:52:28,483:INFO:SubProcess create_model() end ==================================
2023-04-26 14:52:28,483:INFO:Creating metrics dataframe
2023-04-26 14:52:28,498:INFO:Initializing create_model()
2023-04-26 14:52:28,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f9494bb7ee0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-26 14:52:28,498:INFO:Checking exceptions
2023-04-26 14:52:28,500:INFO:Importing libraries
2023-04-26 14:52:28,500:INFO:Copying training dataset
2023-04-26 14:52:28,502:INFO:Defining folds
2023-04-26 14:52:28,503:INFO:Declaring metric variables
2023-04-26 14:52:28,503:INFO:Importing untrained model
2023-04-26 14:52:28,503:INFO:Declaring custom model
2023-04-26 14:52:28,503:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-26 14:52:28,504:INFO:Cross validation set to False
2023-04-26 14:52:28,504:INFO:Fitting Model
2023-04-26 14:52:32,783:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 14:52:32,783:INFO:create_model() successfully completed......................................
2023-04-26 14:52:32,913:INFO:_master_model_container: 15
2023-04-26 14:52:32,913:INFO:_display_container: 2
2023-04-26 14:52:32,913:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 14:52:32,914:INFO:compare_models() successfully completed......................................
2023-04-26 16:28:06,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-26 16:28:06,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-26 16:28:06,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-26 16:28:06,617:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-26 16:28:06,977:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-26 16:28:07,370:INFO:PyCaret ClassificationExperiment
2023-04-26 16:28:07,370:INFO:Logging name: clf-default-name
2023-04-26 16:28:07,370:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-26 16:28:07,370:INFO:version 3.0.0
2023-04-26 16:28:07,370:INFO:Initializing setup()
2023-04-26 16:28:07,370:INFO:self.USI: 71eb
2023-04-26 16:28:07,370:INFO:self._variable_keys: {'y', 'html_param', 'logging_param', 'fix_imbalance', 'X', '_available_plots', 'memory', 'fold_groups_param', 'gpu_param', 'pipeline', 'fold_generator', 'USI', 'exp_id', 'target_param', 'y_train', 'is_multiclass', 'log_plots_param', 'seed', 'data', 'fold_shuffle_param', 'n_jobs_param', 'gpu_n_jobs_param', 'exp_name_log', '_ml_usecase', 'X_train', 'X_test', 'idx', 'y_test'}
2023-04-26 16:28:07,371:INFO:Checking environment
2023-04-26 16:28:07,371:INFO:python_version: 3.10.6
2023-04-26 16:28:07,371:INFO:python_build: ('main', 'Oct 24 2022 11:04:34')
2023-04-26 16:28:07,371:INFO:machine: x86_64
2023-04-26 16:28:07,371:INFO:platform: macOS-10.16-x86_64-i386-64bit
2023-04-26 16:28:07,371:INFO:Memory: svmem(total=17179869184, available=1132740608, percent=93.4, used=1820176384, free=30425088, active=1105330176, inactive=1071882240, wired=714846208)
2023-04-26 16:28:07,371:INFO:Physical Core: 8
2023-04-26 16:28:07,371:INFO:Logical Core: 8
2023-04-26 16:28:07,371:INFO:Checking libraries
2023-04-26 16:28:07,371:INFO:System:
2023-04-26 16:28:07,371:INFO:    python: 3.10.6 (main, Oct 24 2022, 11:04:34) [Clang 12.0.0 ]
2023-04-26 16:28:07,371:INFO:executable: /Users/limuqing/opt/anaconda3/envs/ANLY590/bin/python
2023-04-26 16:28:07,371:INFO:   machine: macOS-10.16-x86_64-i386-64bit
2023-04-26 16:28:07,371:INFO:PyCaret required dependencies:
2023-04-26 16:28:07,371:INFO:                 pip: 22.2.2
2023-04-26 16:28:07,371:INFO:          setuptools: 65.4.0
2023-04-26 16:28:07,371:INFO:             pycaret: 3.0.0
2023-04-26 16:28:07,371:INFO:             IPython: 8.4.0
2023-04-26 16:28:07,371:INFO:          ipywidgets: 8.0.6
2023-04-26 16:28:07,371:INFO:                tqdm: 4.64.1
2023-04-26 16:28:07,371:INFO:               numpy: 1.21.5
2023-04-26 16:28:07,371:INFO:              pandas: 1.4.2
2023-04-26 16:28:07,371:INFO:              jinja2: 3.1.2
2023-04-26 16:28:07,371:INFO:               scipy: 1.7.3
2023-04-26 16:28:07,371:INFO:              joblib: 1.2.0
2023-04-26 16:28:07,371:INFO:             sklearn: 1.1.2
2023-04-26 16:28:07,371:INFO:                pyod: 1.0.9
2023-04-26 16:28:07,371:INFO:            imblearn: 0.10.1
2023-04-26 16:28:07,371:INFO:   category_encoders: 2.6.0
2023-04-26 16:28:07,371:INFO:            lightgbm: 3.3.5
2023-04-26 16:28:07,371:INFO:               numba: 0.56.4
2023-04-26 16:28:07,371:INFO:            requests: 2.28.1
2023-04-26 16:28:07,371:INFO:          matplotlib: 3.5.3
2023-04-26 16:28:07,371:INFO:          scikitplot: 0.3.7
2023-04-26 16:28:07,371:INFO:         yellowbrick: 1.5
2023-04-26 16:28:07,371:INFO:              plotly: 5.9.0
2023-04-26 16:28:07,371:INFO:             kaleido: 0.2.1
2023-04-26 16:28:07,371:INFO:         statsmodels: 0.13.2
2023-04-26 16:28:07,371:INFO:              sktime: 0.17.2
2023-04-26 16:28:07,371:INFO:               tbats: 1.1.3
2023-04-26 16:28:07,371:INFO:            pmdarima: 2.0.3
2023-04-26 16:28:07,371:INFO:              psutil: 5.9.0
2023-04-26 16:28:07,371:INFO:PyCaret optional dependencies:
2023-04-26 16:28:07,379:INFO:                shap: Not installed
2023-04-26 16:28:07,379:INFO:           interpret: Not installed
2023-04-26 16:28:07,379:INFO:                umap: Not installed
2023-04-26 16:28:07,379:INFO:    pandas_profiling: 3.4.0
2023-04-26 16:28:07,379:INFO:  explainerdashboard: Not installed
2023-04-26 16:28:07,379:INFO:             autoviz: 0.1.601
2023-04-26 16:28:07,379:INFO:           fairlearn: Not installed
2023-04-26 16:28:07,380:INFO:             xgboost: 1.7.3
2023-04-26 16:28:07,380:INFO:            catboost: Not installed
2023-04-26 16:28:07,380:INFO:              kmodes: Not installed
2023-04-26 16:28:07,380:INFO:             mlxtend: Not installed
2023-04-26 16:28:07,380:INFO:       statsforecast: Not installed
2023-04-26 16:28:07,380:INFO:        tune_sklearn: Not installed
2023-04-26 16:28:07,380:INFO:                 ray: Not installed
2023-04-26 16:28:07,380:INFO:            hyperopt: Not installed
2023-04-26 16:28:07,380:INFO:              optuna: Not installed
2023-04-26 16:28:07,380:INFO:               skopt: Not installed
2023-04-26 16:28:07,380:INFO:              mlflow: Not installed
2023-04-26 16:28:07,380:INFO:              gradio: Not installed
2023-04-26 16:28:07,380:INFO:             fastapi: Not installed
2023-04-26 16:28:07,380:INFO:             uvicorn: Not installed
2023-04-26 16:28:07,380:INFO:              m2cgen: Not installed
2023-04-26 16:28:07,380:INFO:           evidently: Not installed
2023-04-26 16:28:07,380:INFO:               fugue: Not installed
2023-04-26 16:28:07,380:INFO:           streamlit: Not installed
2023-04-26 16:28:07,380:INFO:             prophet: Not installed
2023-04-26 16:28:07,380:INFO:None
2023-04-26 16:28:07,380:INFO:Set up data.
2023-04-26 16:28:07,386:INFO:Set up train/test split.
2023-04-26 16:28:07,390:INFO:Set up index.
2023-04-26 16:28:07,390:INFO:Set up folding strategy.
2023-04-26 16:28:07,390:INFO:Assigning column types.
2023-04-26 16:28:07,391:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-26 16:28:07,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-26 16:28:07,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-26 16:28:07,452:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 16:28:07,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 16:28:07,560:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-26 16:28:07,561:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-26 16:28:07,581:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 16:28:07,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 16:28:07,584:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-26 16:28:07,618:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-26 16:28:07,639:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 16:28:07,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 16:28:07,675:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-26 16:28:07,696:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 16:28:07,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 16:28:07,698:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-26 16:28:07,754:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 16:28:07,756:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 16:28:07,812:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 16:28:07,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 16:28:07,815:INFO:Preparing preprocessing pipeline...
2023-04-26 16:28:07,817:INFO:Set up label encoding.
2023-04-26 16:28:07,817:INFO:Set up simple imputation.
2023-04-26 16:28:07,817:INFO:Set up feature normalization.
2023-04-26 16:28:07,817:INFO:Set up column name cleaning.
2023-04-26 16:28:07,837:INFO:Finished creating preprocessing pipeline.
2023-04-26 16:28:07,842:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/k4/s8f00krn1f70p5gvf3wgc2tr0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['baseline value', 'accelerations',
                                             'fetal_movement',
                                             'uterine_contractions',
                                             'light_decele...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-26 16:28:07,842:INFO:Creating final display dataframe.
2023-04-26 16:28:07,903:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target            fetal_health
2                   Target type              Multiclass
3                Target mapping  1.0: 0, 2.0: 1, 3.0: 2
4           Original data shape              (3966, 22)
5        Transformed data shape              (3966, 22)
6   Transformed train set shape              (2776, 22)
7    Transformed test set shape              (1190, 22)
8              Numeric features                      21
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                    Normalize                    True
14             Normalize method                  zscore
15               Fold Generator         StratifiedKFold
16                  Fold Number                      10
17                     CPU Jobs                      -1
18                      Use GPU                   False
19               Log Experiment                   False
20              Experiment Name        clf-default-name
21                          USI                    71eb
2023-04-26 16:28:07,967:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 16:28:07,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 16:28:08,026:INFO:Soft dependency imported: xgboost: 1.7.3
2023-04-26 16:28:08,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-26 16:28:08,028:INFO:setup() successfully completed in 0.67s...............
2023-04-26 16:28:08,044:INFO:Initializing compare_models()
2023-04-26 16:28:08,045:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-26 16:28:08,045:INFO:Checking exceptions
2023-04-26 16:28:08,047:INFO:Preparing display monitor
2023-04-26 16:28:08,100:INFO:Initializing Logistic Regression
2023-04-26 16:28:08,101:INFO:Total runtime is 5.014737447102865e-06 minutes
2023-04-26 16:28:08,103:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:08,103:INFO:Initializing create_model()
2023-04-26 16:28:08,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:08,103:INFO:Checking exceptions
2023-04-26 16:28:08,103:INFO:Importing libraries
2023-04-26 16:28:08,103:INFO:Copying training dataset
2023-04-26 16:28:08,107:INFO:Defining folds
2023-04-26 16:28:08,107:INFO:Declaring metric variables
2023-04-26 16:28:08,109:INFO:Importing untrained model
2023-04-26 16:28:08,112:INFO:Logistic Regression Imported successfully
2023-04-26 16:28:08,117:INFO:Starting cross validation
2023-04-26 16:28:08,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:11,400:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,401:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,402:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,402:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,402:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,403:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,404:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,406:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,407:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,446:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,447:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,443:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,448:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,452:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,455:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,456:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,457:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,457:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,458:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,458:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,459:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,469:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,470:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,471:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,549:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,550:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,551:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,570:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,571:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,572:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,577:INFO:Calculating mean and std
2023-04-26 16:28:11,580:INFO:Creating metrics dataframe
2023-04-26 16:28:11,596:INFO:Uploading results into container
2023-04-26 16:28:11,597:INFO:Uploading model into container now
2023-04-26 16:28:11,597:INFO:_master_model_container: 1
2023-04-26 16:28:11,598:INFO:_display_container: 2
2023-04-26 16:28:11,598:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-26 16:28:11,598:INFO:create_model() successfully completed......................................
2023-04-26 16:28:11,721:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:11,721:INFO:Creating metrics dataframe
2023-04-26 16:28:11,727:INFO:Initializing K Neighbors Classifier
2023-04-26 16:28:11,727:INFO:Total runtime is 0.060440099239349364 minutes
2023-04-26 16:28:11,729:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:11,729:INFO:Initializing create_model()
2023-04-26 16:28:11,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:11,729:INFO:Checking exceptions
2023-04-26 16:28:11,729:INFO:Importing libraries
2023-04-26 16:28:11,729:INFO:Copying training dataset
2023-04-26 16:28:11,733:INFO:Defining folds
2023-04-26 16:28:11,733:INFO:Declaring metric variables
2023-04-26 16:28:11,735:INFO:Importing untrained model
2023-04-26 16:28:11,737:INFO:K Neighbors Classifier Imported successfully
2023-04-26 16:28:11,741:INFO:Starting cross validation
2023-04-26 16:28:11,742:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:11,862:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,863:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,864:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,875:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,875:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,876:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,876:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,877:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,877:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,878:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,879:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,880:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,885:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,886:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,887:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,897:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,898:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,898:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,899:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,899:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,900:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,930:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,931:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,933:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,952:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,953:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,954:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,958:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,959:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,960:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:11,965:INFO:Calculating mean and std
2023-04-26 16:28:11,966:INFO:Creating metrics dataframe
2023-04-26 16:28:11,979:INFO:Uploading results into container
2023-04-26 16:28:11,979:INFO:Uploading model into container now
2023-04-26 16:28:11,980:INFO:_master_model_container: 2
2023-04-26 16:28:11,980:INFO:_display_container: 2
2023-04-26 16:28:11,980:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-26 16:28:11,980:INFO:create_model() successfully completed......................................
2023-04-26 16:28:12,070:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:12,070:INFO:Creating metrics dataframe
2023-04-26 16:28:12,076:INFO:Initializing Naive Bayes
2023-04-26 16:28:12,076:INFO:Total runtime is 0.06625630060831705 minutes
2023-04-26 16:28:12,077:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:12,078:INFO:Initializing create_model()
2023-04-26 16:28:12,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:12,078:INFO:Checking exceptions
2023-04-26 16:28:12,078:INFO:Importing libraries
2023-04-26 16:28:12,078:INFO:Copying training dataset
2023-04-26 16:28:12,081:INFO:Defining folds
2023-04-26 16:28:12,081:INFO:Declaring metric variables
2023-04-26 16:28:12,083:INFO:Importing untrained model
2023-04-26 16:28:12,086:INFO:Naive Bayes Imported successfully
2023-04-26 16:28:12,090:INFO:Starting cross validation
2023-04-26 16:28:12,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:12,156:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,157:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,158:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,163:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,164:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,165:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,174:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,175:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,175:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,176:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,176:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,177:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,180:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,181:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,182:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,192:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,193:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,194:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,196:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,197:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,198:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,215:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,216:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,217:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,225:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,226:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,227:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,241:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,242:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,243:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,246:INFO:Calculating mean and std
2023-04-26 16:28:12,247:INFO:Creating metrics dataframe
2023-04-26 16:28:12,261:INFO:Uploading results into container
2023-04-26 16:28:12,261:INFO:Uploading model into container now
2023-04-26 16:28:12,262:INFO:_master_model_container: 3
2023-04-26 16:28:12,262:INFO:_display_container: 2
2023-04-26 16:28:12,262:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-26 16:28:12,262:INFO:create_model() successfully completed......................................
2023-04-26 16:28:12,352:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:12,352:INFO:Creating metrics dataframe
2023-04-26 16:28:12,358:INFO:Initializing Decision Tree Classifier
2023-04-26 16:28:12,358:INFO:Total runtime is 0.07096468210220337 minutes
2023-04-26 16:28:12,360:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:12,360:INFO:Initializing create_model()
2023-04-26 16:28:12,360:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:12,360:INFO:Checking exceptions
2023-04-26 16:28:12,360:INFO:Importing libraries
2023-04-26 16:28:12,360:INFO:Copying training dataset
2023-04-26 16:28:12,363:INFO:Defining folds
2023-04-26 16:28:12,363:INFO:Declaring metric variables
2023-04-26 16:28:12,365:INFO:Importing untrained model
2023-04-26 16:28:12,367:INFO:Decision Tree Classifier Imported successfully
2023-04-26 16:28:12,372:INFO:Starting cross validation
2023-04-26 16:28:12,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:12,463:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,464:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,465:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,466:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,467:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,468:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,468:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,469:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,470:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,481:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,482:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,483:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,496:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,498:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,499:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,499:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,500:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,501:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,503:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,504:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,505:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,515:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,516:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,517:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,557:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,558:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,559:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,560:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,561:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,562:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,570:INFO:Calculating mean and std
2023-04-26 16:28:12,570:INFO:Creating metrics dataframe
2023-04-26 16:28:12,585:INFO:Uploading results into container
2023-04-26 16:28:12,585:INFO:Uploading model into container now
2023-04-26 16:28:12,585:INFO:_master_model_container: 4
2023-04-26 16:28:12,585:INFO:_display_container: 2
2023-04-26 16:28:12,586:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-26 16:28:12,586:INFO:create_model() successfully completed......................................
2023-04-26 16:28:12,676:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:12,676:INFO:Creating metrics dataframe
2023-04-26 16:28:12,682:INFO:Initializing SVM - Linear Kernel
2023-04-26 16:28:12,682:INFO:Total runtime is 0.07636338472366333 minutes
2023-04-26 16:28:12,684:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:12,684:INFO:Initializing create_model()
2023-04-26 16:28:12,684:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:12,684:INFO:Checking exceptions
2023-04-26 16:28:12,684:INFO:Importing libraries
2023-04-26 16:28:12,684:INFO:Copying training dataset
2023-04-26 16:28:12,688:INFO:Defining folds
2023-04-26 16:28:12,688:INFO:Declaring metric variables
2023-04-26 16:28:12,690:INFO:Importing untrained model
2023-04-26 16:28:12,692:INFO:SVM - Linear Kernel Imported successfully
2023-04-26 16:28:12,696:INFO:Starting cross validation
2023-04-26 16:28:12,697:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:12,781:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,782:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,783:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,784:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,786:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,787:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,788:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,789:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,794:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,794:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,795:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,796:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,797:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,797:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,800:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,802:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,805:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,805:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,806:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,807:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,814:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,815:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,816:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,817:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,830:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,831:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,832:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,833:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,842:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,843:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,844:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,845:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,856:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,857:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,858:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,859:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,866:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:12,866:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,867:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,868:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:12,871:INFO:Calculating mean and std
2023-04-26 16:28:12,872:INFO:Creating metrics dataframe
2023-04-26 16:28:12,886:INFO:Uploading results into container
2023-04-26 16:28:12,886:INFO:Uploading model into container now
2023-04-26 16:28:12,887:INFO:_master_model_container: 5
2023-04-26 16:28:12,887:INFO:_display_container: 2
2023-04-26 16:28:12,887:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-26 16:28:12,887:INFO:create_model() successfully completed......................................
2023-04-26 16:28:12,980:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:12,980:INFO:Creating metrics dataframe
2023-04-26 16:28:12,986:INFO:Initializing Ridge Classifier
2023-04-26 16:28:12,986:INFO:Total runtime is 0.08142593304316202 minutes
2023-04-26 16:28:12,988:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:12,988:INFO:Initializing create_model()
2023-04-26 16:28:12,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:12,988:INFO:Checking exceptions
2023-04-26 16:28:12,988:INFO:Importing libraries
2023-04-26 16:28:12,988:INFO:Copying training dataset
2023-04-26 16:28:12,991:INFO:Defining folds
2023-04-26 16:28:12,991:INFO:Declaring metric variables
2023-04-26 16:28:12,993:INFO:Importing untrained model
2023-04-26 16:28:12,995:INFO:Ridge Classifier Imported successfully
2023-04-26 16:28:13,000:INFO:Starting cross validation
2023-04-26 16:28:13,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:13,067:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,067:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,067:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,067:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,067:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,067:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,068:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,068:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,068:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,069:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,069:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,069:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,074:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,074:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,075:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,076:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,080:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,080:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,082:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,082:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,082:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,083:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,083:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,083:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,116:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,117:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,118:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,119:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,123:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,124:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,125:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,125:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:13,125:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,126:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,126:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,127:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,140:INFO:Calculating mean and std
2023-04-26 16:28:13,141:INFO:Creating metrics dataframe
2023-04-26 16:28:13,156:INFO:Uploading results into container
2023-04-26 16:28:13,157:INFO:Uploading model into container now
2023-04-26 16:28:13,157:INFO:_master_model_container: 6
2023-04-26 16:28:13,157:INFO:_display_container: 2
2023-04-26 16:28:13,157:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-26 16:28:13,157:INFO:create_model() successfully completed......................................
2023-04-26 16:28:13,248:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:13,248:INFO:Creating metrics dataframe
2023-04-26 16:28:13,255:INFO:Initializing Random Forest Classifier
2023-04-26 16:28:13,255:INFO:Total runtime is 0.08591041564941405 minutes
2023-04-26 16:28:13,257:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:13,257:INFO:Initializing create_model()
2023-04-26 16:28:13,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:13,257:INFO:Checking exceptions
2023-04-26 16:28:13,257:INFO:Importing libraries
2023-04-26 16:28:13,257:INFO:Copying training dataset
2023-04-26 16:28:13,260:INFO:Defining folds
2023-04-26 16:28:13,260:INFO:Declaring metric variables
2023-04-26 16:28:13,263:INFO:Importing untrained model
2023-04-26 16:28:13,265:INFO:Random Forest Classifier Imported successfully
2023-04-26 16:28:13,268:INFO:Starting cross validation
2023-04-26 16:28:13,269:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:13,511:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,512:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,512:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,512:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,513:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,513:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,513:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,513:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,514:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,514:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,515:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,516:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,524:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,525:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,525:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,526:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,528:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,529:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,551:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,552:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,553:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,553:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,554:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,555:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,702:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,703:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,704:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,707:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,708:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,709:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,713:INFO:Calculating mean and std
2023-04-26 16:28:13,714:INFO:Creating metrics dataframe
2023-04-26 16:28:13,729:INFO:Uploading results into container
2023-04-26 16:28:13,729:INFO:Uploading model into container now
2023-04-26 16:28:13,730:INFO:_master_model_container: 7
2023-04-26 16:28:13,730:INFO:_display_container: 2
2023-04-26 16:28:13,730:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-26 16:28:13,730:INFO:create_model() successfully completed......................................
2023-04-26 16:28:13,823:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:13,824:INFO:Creating metrics dataframe
2023-04-26 16:28:13,830:INFO:Initializing Quadratic Discriminant Analysis
2023-04-26 16:28:13,830:INFO:Total runtime is 0.09549593130747476 minutes
2023-04-26 16:28:13,832:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:13,832:INFO:Initializing create_model()
2023-04-26 16:28:13,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:13,832:INFO:Checking exceptions
2023-04-26 16:28:13,832:INFO:Importing libraries
2023-04-26 16:28:13,832:INFO:Copying training dataset
2023-04-26 16:28:13,836:INFO:Defining folds
2023-04-26 16:28:13,836:INFO:Declaring metric variables
2023-04-26 16:28:13,838:INFO:Importing untrained model
2023-04-26 16:28:13,840:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-26 16:28:13,844:INFO:Starting cross validation
2023-04-26 16:28:13,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:13,889:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,889:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,889:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,900:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,910:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,913:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,915:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,920:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,920:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,921:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,921:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,922:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,922:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,932:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,936:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,937:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,937:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,938:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,938:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,939:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,940:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,941:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,942:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,945:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,946:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,947:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,954:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,955:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,956:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,962:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,963:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,963:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,964:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,974:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:13,992:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,993:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:13,994:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,002:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,003:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,004:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,007:INFO:Calculating mean and std
2023-04-26 16:28:14,007:INFO:Creating metrics dataframe
2023-04-26 16:28:14,022:INFO:Uploading results into container
2023-04-26 16:28:14,023:INFO:Uploading model into container now
2023-04-26 16:28:14,023:INFO:_master_model_container: 8
2023-04-26 16:28:14,023:INFO:_display_container: 2
2023-04-26 16:28:14,024:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-26 16:28:14,024:INFO:create_model() successfully completed......................................
2023-04-26 16:28:14,115:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:14,115:INFO:Creating metrics dataframe
2023-04-26 16:28:14,121:INFO:Initializing Ada Boost Classifier
2023-04-26 16:28:14,121:INFO:Total runtime is 0.10035293102264403 minutes
2023-04-26 16:28:14,123:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:14,123:INFO:Initializing create_model()
2023-04-26 16:28:14,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:14,124:INFO:Checking exceptions
2023-04-26 16:28:14,124:INFO:Importing libraries
2023-04-26 16:28:14,124:INFO:Copying training dataset
2023-04-26 16:28:14,127:INFO:Defining folds
2023-04-26 16:28:14,127:INFO:Declaring metric variables
2023-04-26 16:28:14,129:INFO:Importing untrained model
2023-04-26 16:28:14,131:INFO:Ada Boost Classifier Imported successfully
2023-04-26 16:28:14,135:INFO:Starting cross validation
2023-04-26 16:28:14,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:14,262:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,263:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,264:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,266:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,268:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,269:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,276:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,276:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,277:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,277:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,278:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,278:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,280:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,281:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,282:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,291:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,291:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,292:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,292:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,293:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,293:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,302:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,303:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,304:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,388:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,389:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,390:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,390:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,391:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,392:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,401:INFO:Calculating mean and std
2023-04-26 16:28:14,402:INFO:Creating metrics dataframe
2023-04-26 16:28:14,416:INFO:Uploading results into container
2023-04-26 16:28:14,417:INFO:Uploading model into container now
2023-04-26 16:28:14,417:INFO:_master_model_container: 9
2023-04-26 16:28:14,417:INFO:_display_container: 2
2023-04-26 16:28:14,417:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-26 16:28:14,417:INFO:create_model() successfully completed......................................
2023-04-26 16:28:14,507:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:14,507:INFO:Creating metrics dataframe
2023-04-26 16:28:14,514:INFO:Initializing Gradient Boosting Classifier
2023-04-26 16:28:14,515:INFO:Total runtime is 0.10690341393152872 minutes
2023-04-26 16:28:14,516:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:14,517:INFO:Initializing create_model()
2023-04-26 16:28:14,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:14,517:INFO:Checking exceptions
2023-04-26 16:28:14,517:INFO:Importing libraries
2023-04-26 16:28:14,517:INFO:Copying training dataset
2023-04-26 16:28:14,520:INFO:Defining folds
2023-04-26 16:28:14,520:INFO:Declaring metric variables
2023-04-26 16:28:14,522:INFO:Importing untrained model
2023-04-26 16:28:14,524:INFO:Gradient Boosting Classifier Imported successfully
2023-04-26 16:28:14,528:INFO:Starting cross validation
2023-04-26 16:28:14,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:14,774:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,775:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,776:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,797:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,798:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,799:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,799:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,800:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,801:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,805:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,806:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,807:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,821:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,822:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,823:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,825:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,826:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,827:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,828:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,829:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,830:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,856:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,857:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:14,858:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,003:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,004:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,005:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,017:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,018:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,019:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,021:INFO:Calculating mean and std
2023-04-26 16:28:15,022:INFO:Creating metrics dataframe
2023-04-26 16:28:15,036:INFO:Uploading results into container
2023-04-26 16:28:15,037:INFO:Uploading model into container now
2023-04-26 16:28:15,037:INFO:_master_model_container: 10
2023-04-26 16:28:15,037:INFO:_display_container: 2
2023-04-26 16:28:15,037:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-26 16:28:15,037:INFO:create_model() successfully completed......................................
2023-04-26 16:28:15,129:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:15,129:INFO:Creating metrics dataframe
2023-04-26 16:28:15,136:INFO:Initializing Linear Discriminant Analysis
2023-04-26 16:28:15,136:INFO:Total runtime is 0.11726358334223429 minutes
2023-04-26 16:28:15,138:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:15,138:INFO:Initializing create_model()
2023-04-26 16:28:15,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:15,138:INFO:Checking exceptions
2023-04-26 16:28:15,138:INFO:Importing libraries
2023-04-26 16:28:15,138:INFO:Copying training dataset
2023-04-26 16:28:15,142:INFO:Defining folds
2023-04-26 16:28:15,142:INFO:Declaring metric variables
2023-04-26 16:28:15,144:INFO:Importing untrained model
2023-04-26 16:28:15,146:INFO:Linear Discriminant Analysis Imported successfully
2023-04-26 16:28:15,149:INFO:Starting cross validation
2023-04-26 16:28:15,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:15,224:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,225:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,226:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,233:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,234:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,234:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,235:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,235:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,236:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,242:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,243:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,243:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,243:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,244:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,244:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,244:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,245:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,246:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,256:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,257:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,258:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,274:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,275:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,276:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,300:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,301:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,302:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,309:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,310:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,311:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,313:INFO:Calculating mean and std
2023-04-26 16:28:15,314:INFO:Creating metrics dataframe
2023-04-26 16:28:15,328:INFO:Uploading results into container
2023-04-26 16:28:15,329:INFO:Uploading model into container now
2023-04-26 16:28:15,329:INFO:_master_model_container: 11
2023-04-26 16:28:15,329:INFO:_display_container: 2
2023-04-26 16:28:15,329:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-26 16:28:15,329:INFO:create_model() successfully completed......................................
2023-04-26 16:28:15,419:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:15,419:INFO:Creating metrics dataframe
2023-04-26 16:28:15,427:INFO:Initializing Extra Trees Classifier
2023-04-26 16:28:15,427:INFO:Total runtime is 0.12210948467254638 minutes
2023-04-26 16:28:15,429:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:15,429:INFO:Initializing create_model()
2023-04-26 16:28:15,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:15,429:INFO:Checking exceptions
2023-04-26 16:28:15,429:INFO:Importing libraries
2023-04-26 16:28:15,429:INFO:Copying training dataset
2023-04-26 16:28:15,432:INFO:Defining folds
2023-04-26 16:28:15,432:INFO:Declaring metric variables
2023-04-26 16:28:15,434:INFO:Importing untrained model
2023-04-26 16:28:15,436:INFO:Extra Trees Classifier Imported successfully
2023-04-26 16:28:15,440:INFO:Starting cross validation
2023-04-26 16:28:15,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:15,680:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,682:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,683:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,686:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,687:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,688:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,695:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,696:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,697:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,705:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,706:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,707:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,726:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,727:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,727:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,728:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,728:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,729:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,742:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,743:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,743:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,744:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,744:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,745:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,871:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,872:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,873:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,879:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,880:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,881:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:15,883:INFO:Calculating mean and std
2023-04-26 16:28:15,884:INFO:Creating metrics dataframe
2023-04-26 16:28:15,898:INFO:Uploading results into container
2023-04-26 16:28:15,899:INFO:Uploading model into container now
2023-04-26 16:28:15,899:INFO:_master_model_container: 12
2023-04-26 16:28:15,899:INFO:_display_container: 2
2023-04-26 16:28:15,899:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-26 16:28:15,899:INFO:create_model() successfully completed......................................
2023-04-26 16:28:15,989:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:15,989:INFO:Creating metrics dataframe
2023-04-26 16:28:15,997:INFO:Initializing Extreme Gradient Boosting
2023-04-26 16:28:15,997:INFO:Total runtime is 0.131609312693278 minutes
2023-04-26 16:28:15,999:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:15,999:INFO:Initializing create_model()
2023-04-26 16:28:15,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:15,999:INFO:Checking exceptions
2023-04-26 16:28:15,999:INFO:Importing libraries
2023-04-26 16:28:15,999:INFO:Copying training dataset
2023-04-26 16:28:16,002:INFO:Defining folds
2023-04-26 16:28:16,003:INFO:Declaring metric variables
2023-04-26 16:28:16,005:INFO:Importing untrained model
2023-04-26 16:28:16,007:INFO:Extreme Gradient Boosting Imported successfully
2023-04-26 16:28:16,011:INFO:Starting cross validation
2023-04-26 16:28:16,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:16,146:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,147:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,148:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,148:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,149:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,150:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,151:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,152:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,153:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,153:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,154:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,154:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,155:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,156:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,157:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,166:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,167:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,168:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,179:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,180:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,181:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,186:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,187:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,187:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,224:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,225:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,226:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,232:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,233:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,234:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,236:INFO:Calculating mean and std
2023-04-26 16:28:16,237:INFO:Creating metrics dataframe
2023-04-26 16:28:16,251:INFO:Uploading results into container
2023-04-26 16:28:16,252:INFO:Uploading model into container now
2023-04-26 16:28:16,252:INFO:_master_model_container: 13
2023-04-26 16:28:16,252:INFO:_display_container: 2
2023-04-26 16:28:16,253:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-26 16:28:16,253:INFO:create_model() successfully completed......................................
2023-04-26 16:28:16,343:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:16,343:INFO:Creating metrics dataframe
2023-04-26 16:28:16,351:INFO:Initializing Light Gradient Boosting Machine
2023-04-26 16:28:16,351:INFO:Total runtime is 0.13750938177108765 minutes
2023-04-26 16:28:16,353:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:16,353:INFO:Initializing create_model()
2023-04-26 16:28:16,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:16,353:INFO:Checking exceptions
2023-04-26 16:28:16,353:INFO:Importing libraries
2023-04-26 16:28:16,353:INFO:Copying training dataset
2023-04-26 16:28:16,357:INFO:Defining folds
2023-04-26 16:28:16,357:INFO:Declaring metric variables
2023-04-26 16:28:16,359:INFO:Importing untrained model
2023-04-26 16:28:16,361:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-26 16:28:16,365:INFO:Starting cross validation
2023-04-26 16:28:16,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:16,853:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,854:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,855:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,855:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,856:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,857:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,859:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,860:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,861:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,862:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,863:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,864:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,868:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,869:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,870:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,870:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,871:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,872:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,888:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,889:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,890:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,902:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,903:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,904:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,981:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,982:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,983:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,984:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,985:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,986:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:16,993:INFO:Calculating mean and std
2023-04-26 16:28:16,994:INFO:Creating metrics dataframe
2023-04-26 16:28:17,008:INFO:Uploading results into container
2023-04-26 16:28:17,008:INFO:Uploading model into container now
2023-04-26 16:28:17,009:INFO:_master_model_container: 14
2023-04-26 16:28:17,009:INFO:_display_container: 2
2023-04-26 16:28:17,009:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 16:28:17,009:INFO:create_model() successfully completed......................................
2023-04-26 16:28:17,099:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:17,099:INFO:Creating metrics dataframe
2023-04-26 16:28:17,107:INFO:Initializing Dummy Classifier
2023-04-26 16:28:17,107:INFO:Total runtime is 0.15011404752731325 minutes
2023-04-26 16:28:17,109:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:17,110:INFO:Initializing create_model()
2023-04-26 16:28:17,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae67d9060>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:17,110:INFO:Checking exceptions
2023-04-26 16:28:17,110:INFO:Importing libraries
2023-04-26 16:28:17,110:INFO:Copying training dataset
2023-04-26 16:28:17,113:INFO:Defining folds
2023-04-26 16:28:17,113:INFO:Declaring metric variables
2023-04-26 16:28:17,115:INFO:Importing untrained model
2023-04-26 16:28:17,117:INFO:Dummy Classifier Imported successfully
2023-04-26 16:28:17,121:INFO:Starting cross validation
2023-04-26 16:28:17,122:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:17,180:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,182:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,182:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,183:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,189:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,190:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,191:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,191:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,191:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,192:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,193:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,193:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,202:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,203:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,204:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,204:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,209:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,210:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,211:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,211:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,228:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,229:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,230:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,230:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,238:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,239:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,240:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,240:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,246:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,247:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,248:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,248:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,252:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,253:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,254:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,254:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,257:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,258:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,259:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:17,259:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,269:INFO:Calculating mean and std
2023-04-26 16:28:17,270:INFO:Creating metrics dataframe
2023-04-26 16:28:17,283:INFO:Uploading results into container
2023-04-26 16:28:17,284:INFO:Uploading model into container now
2023-04-26 16:28:17,284:INFO:_master_model_container: 15
2023-04-26 16:28:17,284:INFO:_display_container: 2
2023-04-26 16:28:17,284:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-26 16:28:17,284:INFO:create_model() successfully completed......................................
2023-04-26 16:28:17,374:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:17,375:INFO:Creating metrics dataframe
2023-04-26 16:28:17,388:INFO:Initializing create_model()
2023-04-26 16:28:17,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:17,388:INFO:Checking exceptions
2023-04-26 16:28:17,390:INFO:Importing libraries
2023-04-26 16:28:17,390:INFO:Copying training dataset
2023-04-26 16:28:17,392:INFO:Defining folds
2023-04-26 16:28:17,392:INFO:Declaring metric variables
2023-04-26 16:28:17,392:INFO:Importing untrained model
2023-04-26 16:28:17,392:INFO:Declaring custom model
2023-04-26 16:28:17,392:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-26 16:28:17,393:INFO:Cross validation set to False
2023-04-26 16:28:17,393:INFO:Fitting Model
2023-04-26 16:28:17,428:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 16:28:17,428:INFO:create_model() successfully completed......................................
2023-04-26 16:28:17,544:INFO:_master_model_container: 15
2023-04-26 16:28:17,544:INFO:_display_container: 2
2023-04-26 16:28:17,544:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 16:28:17,545:INFO:compare_models() successfully completed......................................
2023-04-26 16:28:17,588:INFO:Initializing compare_models()
2023-04-26 16:28:17,588:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-26 16:28:17,589:INFO:Checking exceptions
2023-04-26 16:28:17,590:INFO:Preparing display monitor
2023-04-26 16:28:17,611:INFO:Initializing Logistic Regression
2023-04-26 16:28:17,611:INFO:Total runtime is 3.4332275390625e-06 minutes
2023-04-26 16:28:17,614:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:17,614:INFO:Initializing create_model()
2023-04-26 16:28:17,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:17,614:INFO:Checking exceptions
2023-04-26 16:28:17,614:INFO:Importing libraries
2023-04-26 16:28:17,615:INFO:Copying training dataset
2023-04-26 16:28:17,618:INFO:Defining folds
2023-04-26 16:28:17,618:INFO:Declaring metric variables
2023-04-26 16:28:17,620:INFO:Importing untrained model
2023-04-26 16:28:17,622:INFO:Logistic Regression Imported successfully
2023-04-26 16:28:17,626:INFO:Starting cross validation
2023-04-26 16:28:17,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:17,741:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,742:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,742:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,743:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,743:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,744:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,746:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,747:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,748:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,754:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,755:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,756:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,757:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,757:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,758:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,758:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,759:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,760:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,763:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,764:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,765:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,781:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,782:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,783:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,839:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,840:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,841:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,846:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,848:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,849:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:17,853:INFO:Calculating mean and std
2023-04-26 16:28:17,853:INFO:Creating metrics dataframe
2023-04-26 16:28:17,870:INFO:Uploading results into container
2023-04-26 16:28:17,871:INFO:Uploading model into container now
2023-04-26 16:28:17,871:INFO:_master_model_container: 16
2023-04-26 16:28:17,871:INFO:_display_container: 3
2023-04-26 16:28:17,872:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-26 16:28:17,872:INFO:create_model() successfully completed......................................
2023-04-26 16:28:17,964:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:17,964:INFO:Creating metrics dataframe
2023-04-26 16:28:17,969:INFO:Initializing K Neighbors Classifier
2023-04-26 16:28:17,969:INFO:Total runtime is 0.005963381131490072 minutes
2023-04-26 16:28:17,971:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:17,971:INFO:Initializing create_model()
2023-04-26 16:28:17,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:17,971:INFO:Checking exceptions
2023-04-26 16:28:17,971:INFO:Importing libraries
2023-04-26 16:28:17,971:INFO:Copying training dataset
2023-04-26 16:28:17,974:INFO:Defining folds
2023-04-26 16:28:17,974:INFO:Declaring metric variables
2023-04-26 16:28:17,976:INFO:Importing untrained model
2023-04-26 16:28:17,978:INFO:K Neighbors Classifier Imported successfully
2023-04-26 16:28:17,982:INFO:Starting cross validation
2023-04-26 16:28:17,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:18,069:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,070:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,071:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,073:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,074:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,075:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,079:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,080:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,080:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,082:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,090:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,092:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,093:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,105:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,106:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,106:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,107:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,108:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,109:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,112:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,113:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,114:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,156:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,157:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,158:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,159:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,160:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,161:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,168:INFO:Calculating mean and std
2023-04-26 16:28:18,168:INFO:Creating metrics dataframe
2023-04-26 16:28:18,181:INFO:Uploading results into container
2023-04-26 16:28:18,182:INFO:Uploading model into container now
2023-04-26 16:28:18,182:INFO:_master_model_container: 17
2023-04-26 16:28:18,182:INFO:_display_container: 3
2023-04-26 16:28:18,182:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-26 16:28:18,182:INFO:create_model() successfully completed......................................
2023-04-26 16:28:18,274:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:18,274:INFO:Creating metrics dataframe
2023-04-26 16:28:18,280:INFO:Initializing Naive Bayes
2023-04-26 16:28:18,280:INFO:Total runtime is 0.011149199803670247 minutes
2023-04-26 16:28:18,282:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:18,282:INFO:Initializing create_model()
2023-04-26 16:28:18,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:18,282:INFO:Checking exceptions
2023-04-26 16:28:18,282:INFO:Importing libraries
2023-04-26 16:28:18,282:INFO:Copying training dataset
2023-04-26 16:28:18,285:INFO:Defining folds
2023-04-26 16:28:18,285:INFO:Declaring metric variables
2023-04-26 16:28:18,287:INFO:Importing untrained model
2023-04-26 16:28:18,289:INFO:Naive Bayes Imported successfully
2023-04-26 16:28:18,293:INFO:Starting cross validation
2023-04-26 16:28:18,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:18,356:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,357:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,358:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,359:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,360:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,361:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,364:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,366:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,367:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,375:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,377:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,377:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,378:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,378:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,378:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,379:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,379:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,380:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,407:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,408:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,408:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,409:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,409:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,410:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,419:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,420:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,421:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,435:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,436:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,437:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,439:INFO:Calculating mean and std
2023-04-26 16:28:18,440:INFO:Creating metrics dataframe
2023-04-26 16:28:18,453:INFO:Uploading results into container
2023-04-26 16:28:18,453:INFO:Uploading model into container now
2023-04-26 16:28:18,453:INFO:_master_model_container: 18
2023-04-26 16:28:18,453:INFO:_display_container: 3
2023-04-26 16:28:18,453:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-26 16:28:18,453:INFO:create_model() successfully completed......................................
2023-04-26 16:28:18,546:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:18,546:INFO:Creating metrics dataframe
2023-04-26 16:28:18,552:INFO:Initializing Decision Tree Classifier
2023-04-26 16:28:18,552:INFO:Total runtime is 0.015678950150807697 minutes
2023-04-26 16:28:18,554:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:18,554:INFO:Initializing create_model()
2023-04-26 16:28:18,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:18,554:INFO:Checking exceptions
2023-04-26 16:28:18,554:INFO:Importing libraries
2023-04-26 16:28:18,554:INFO:Copying training dataset
2023-04-26 16:28:18,557:INFO:Defining folds
2023-04-26 16:28:18,557:INFO:Declaring metric variables
2023-04-26 16:28:18,559:INFO:Importing untrained model
2023-04-26 16:28:18,560:INFO:Decision Tree Classifier Imported successfully
2023-04-26 16:28:18,564:INFO:Starting cross validation
2023-04-26 16:28:18,565:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:18,647:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,649:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,649:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,658:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,659:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,660:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,662:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,663:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,664:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,666:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,666:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,667:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,667:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,668:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,668:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,697:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,698:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,699:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,721:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,722:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,723:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,731:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,732:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,733:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,740:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,741:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,742:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,746:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,747:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,748:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,751:INFO:Calculating mean and std
2023-04-26 16:28:18,752:INFO:Creating metrics dataframe
2023-04-26 16:28:18,766:INFO:Uploading results into container
2023-04-26 16:28:18,767:INFO:Uploading model into container now
2023-04-26 16:28:18,767:INFO:_master_model_container: 19
2023-04-26 16:28:18,767:INFO:_display_container: 3
2023-04-26 16:28:18,767:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-26 16:28:18,767:INFO:create_model() successfully completed......................................
2023-04-26 16:28:18,857:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:18,857:INFO:Creating metrics dataframe
2023-04-26 16:28:18,863:INFO:Initializing SVM - Linear Kernel
2023-04-26 16:28:18,863:INFO:Total runtime is 0.020869783560434976 minutes
2023-04-26 16:28:18,865:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:18,865:INFO:Initializing create_model()
2023-04-26 16:28:18,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:18,865:INFO:Checking exceptions
2023-04-26 16:28:18,865:INFO:Importing libraries
2023-04-26 16:28:18,865:INFO:Copying training dataset
2023-04-26 16:28:18,869:INFO:Defining folds
2023-04-26 16:28:18,869:INFO:Declaring metric variables
2023-04-26 16:28:18,871:INFO:Importing untrained model
2023-04-26 16:28:18,873:INFO:SVM - Linear Kernel Imported successfully
2023-04-26 16:28:18,877:INFO:Starting cross validation
2023-04-26 16:28:18,878:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:18,949:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:18,949:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,954:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,957:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,965:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:18,965:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,966:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,967:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,972:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:18,974:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,976:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:18,976:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,977:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,978:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,978:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,979:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,983:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:18,984:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,985:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,986:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,990:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:18,991:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,992:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:18,993:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,012:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:19,013:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,014:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,015:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,021:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:19,022:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,023:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,024:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,034:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:19,035:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,036:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,037:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,048:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-26 16:28:19,048:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,049:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,050:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,053:INFO:Calculating mean and std
2023-04-26 16:28:19,053:INFO:Creating metrics dataframe
2023-04-26 16:28:19,068:INFO:Uploading results into container
2023-04-26 16:28:19,068:INFO:Uploading model into container now
2023-04-26 16:28:19,068:INFO:_master_model_container: 20
2023-04-26 16:28:19,068:INFO:_display_container: 3
2023-04-26 16:28:19,069:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-26 16:28:19,069:INFO:create_model() successfully completed......................................
2023-04-26 16:28:19,170:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:19,170:INFO:Creating metrics dataframe
2023-04-26 16:28:19,177:INFO:Initializing Ridge Classifier
2023-04-26 16:28:19,177:INFO:Total runtime is 0.02609279950459798 minutes
2023-04-26 16:28:19,179:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:19,179:INFO:Initializing create_model()
2023-04-26 16:28:19,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:19,179:INFO:Checking exceptions
2023-04-26 16:28:19,179:INFO:Importing libraries
2023-04-26 16:28:19,179:INFO:Copying training dataset
2023-04-26 16:28:19,182:INFO:Defining folds
2023-04-26 16:28:19,183:INFO:Declaring metric variables
2023-04-26 16:28:19,185:INFO:Importing untrained model
2023-04-26 16:28:19,188:INFO:Ridge Classifier Imported successfully
2023-04-26 16:28:19,192:INFO:Starting cross validation
2023-04-26 16:28:19,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:19,243:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,243:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,244:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,245:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,254:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,254:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,255:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,256:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,256:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,256:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,257:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,258:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,280:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,281:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,282:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,282:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,282:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,283:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,284:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,285:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,296:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,297:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,299:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,300:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,311:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,312:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,313:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,314:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,317:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,317:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,318:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,319:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,337:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,338:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,339:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,340:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,345:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-26 16:28:19,346:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,347:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,348:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,353:INFO:Calculating mean and std
2023-04-26 16:28:19,355:INFO:Creating metrics dataframe
2023-04-26 16:28:19,373:INFO:Uploading results into container
2023-04-26 16:28:19,373:INFO:Uploading model into container now
2023-04-26 16:28:19,374:INFO:_master_model_container: 21
2023-04-26 16:28:19,374:INFO:_display_container: 3
2023-04-26 16:28:19,374:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-26 16:28:19,374:INFO:create_model() successfully completed......................................
2023-04-26 16:28:19,472:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:19,472:INFO:Creating metrics dataframe
2023-04-26 16:28:19,479:INFO:Initializing Random Forest Classifier
2023-04-26 16:28:19,479:INFO:Total runtime is 0.031125934918721516 minutes
2023-04-26 16:28:19,481:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:19,481:INFO:Initializing create_model()
2023-04-26 16:28:19,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:19,481:INFO:Checking exceptions
2023-04-26 16:28:19,481:INFO:Importing libraries
2023-04-26 16:28:19,481:INFO:Copying training dataset
2023-04-26 16:28:19,484:INFO:Defining folds
2023-04-26 16:28:19,484:INFO:Declaring metric variables
2023-04-26 16:28:19,486:INFO:Importing untrained model
2023-04-26 16:28:19,488:INFO:Random Forest Classifier Imported successfully
2023-04-26 16:28:19,492:INFO:Starting cross validation
2023-04-26 16:28:19,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:19,719:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,721:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,722:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,732:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,733:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,734:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,734:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,735:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,735:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,736:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,736:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,737:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,751:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,752:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,754:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,757:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,758:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,759:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,768:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,769:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,770:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,774:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,775:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,776:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,901:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,902:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,903:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,918:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,919:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,920:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:19,923:INFO:Calculating mean and std
2023-04-26 16:28:19,924:INFO:Creating metrics dataframe
2023-04-26 16:28:19,938:INFO:Uploading results into container
2023-04-26 16:28:19,939:INFO:Uploading model into container now
2023-04-26 16:28:19,939:INFO:_master_model_container: 22
2023-04-26 16:28:19,939:INFO:_display_container: 3
2023-04-26 16:28:19,939:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-26 16:28:19,939:INFO:create_model() successfully completed......................................
2023-04-26 16:28:20,029:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:20,029:INFO:Creating metrics dataframe
2023-04-26 16:28:20,036:INFO:Initializing Quadratic Discriminant Analysis
2023-04-26 16:28:20,036:INFO:Total runtime is 0.04041299819946289 minutes
2023-04-26 16:28:20,038:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:20,038:INFO:Initializing create_model()
2023-04-26 16:28:20,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:20,038:INFO:Checking exceptions
2023-04-26 16:28:20,038:INFO:Importing libraries
2023-04-26 16:28:20,038:INFO:Copying training dataset
2023-04-26 16:28:20,041:INFO:Defining folds
2023-04-26 16:28:20,041:INFO:Declaring metric variables
2023-04-26 16:28:20,043:INFO:Importing untrained model
2023-04-26 16:28:20,046:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-26 16:28:20,050:INFO:Starting cross validation
2023-04-26 16:28:20,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:20,088:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,093:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,097:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,098:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,111:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,113:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,119:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,120:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,121:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,122:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,123:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,127:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,128:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,129:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,130:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,131:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,131:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,132:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,135:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,140:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,141:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,142:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,149:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,151:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,152:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,153:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,155:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,164:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,165:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,166:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,170:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-26 16:28:20,179:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,180:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,181:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,184:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,185:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,186:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,198:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,199:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,200:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,203:INFO:Calculating mean and std
2023-04-26 16:28:20,204:INFO:Creating metrics dataframe
2023-04-26 16:28:20,218:INFO:Uploading results into container
2023-04-26 16:28:20,218:INFO:Uploading model into container now
2023-04-26 16:28:20,219:INFO:_master_model_container: 23
2023-04-26 16:28:20,219:INFO:_display_container: 3
2023-04-26 16:28:20,219:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-26 16:28:20,219:INFO:create_model() successfully completed......................................
2023-04-26 16:28:20,311:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:20,311:INFO:Creating metrics dataframe
2023-04-26 16:28:20,318:INFO:Initializing Ada Boost Classifier
2023-04-26 16:28:20,318:INFO:Total runtime is 0.04511819680531819 minutes
2023-04-26 16:28:20,320:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:20,320:INFO:Initializing create_model()
2023-04-26 16:28:20,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:20,320:INFO:Checking exceptions
2023-04-26 16:28:20,321:INFO:Importing libraries
2023-04-26 16:28:20,321:INFO:Copying training dataset
2023-04-26 16:28:20,324:INFO:Defining folds
2023-04-26 16:28:20,324:INFO:Declaring metric variables
2023-04-26 16:28:20,326:INFO:Importing untrained model
2023-04-26 16:28:20,328:INFO:Ada Boost Classifier Imported successfully
2023-04-26 16:28:20,332:INFO:Starting cross validation
2023-04-26 16:28:20,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:20,462:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,463:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,464:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,467:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,468:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,468:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,469:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,469:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,470:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,476:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,477:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,478:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,481:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,482:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,483:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,485:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,487:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,487:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,491:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,492:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,493:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,512:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,513:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,514:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,578:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,579:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,580:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,583:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,584:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,585:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,590:INFO:Calculating mean and std
2023-04-26 16:28:20,591:INFO:Creating metrics dataframe
2023-04-26 16:28:20,604:INFO:Uploading results into container
2023-04-26 16:28:20,604:INFO:Uploading model into container now
2023-04-26 16:28:20,605:INFO:_master_model_container: 24
2023-04-26 16:28:20,605:INFO:_display_container: 3
2023-04-26 16:28:20,605:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-26 16:28:20,605:INFO:create_model() successfully completed......................................
2023-04-26 16:28:20,695:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:20,695:INFO:Creating metrics dataframe
2023-04-26 16:28:20,703:INFO:Initializing Gradient Boosting Classifier
2023-04-26 16:28:20,703:INFO:Total runtime is 0.0515252153078715 minutes
2023-04-26 16:28:20,705:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:20,705:INFO:Initializing create_model()
2023-04-26 16:28:20,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:20,705:INFO:Checking exceptions
2023-04-26 16:28:20,705:INFO:Importing libraries
2023-04-26 16:28:20,705:INFO:Copying training dataset
2023-04-26 16:28:20,708:INFO:Defining folds
2023-04-26 16:28:20,708:INFO:Declaring metric variables
2023-04-26 16:28:20,711:INFO:Importing untrained model
2023-04-26 16:28:20,713:INFO:Gradient Boosting Classifier Imported successfully
2023-04-26 16:28:20,718:INFO:Starting cross validation
2023-04-26 16:28:20,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:20,966:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,967:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,968:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,976:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,977:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,978:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,983:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,984:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,985:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,990:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,991:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:20,992:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,007:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,008:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,009:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,009:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,010:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,011:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,011:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,012:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,012:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,044:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,045:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,046:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,188:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,189:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,190:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,201:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,202:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,203:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,205:INFO:Calculating mean and std
2023-04-26 16:28:21,206:INFO:Creating metrics dataframe
2023-04-26 16:28:21,222:INFO:Uploading results into container
2023-04-26 16:28:21,222:INFO:Uploading model into container now
2023-04-26 16:28:21,222:INFO:_master_model_container: 25
2023-04-26 16:28:21,222:INFO:_display_container: 3
2023-04-26 16:28:21,223:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-26 16:28:21,223:INFO:create_model() successfully completed......................................
2023-04-26 16:28:21,314:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:21,314:INFO:Creating metrics dataframe
2023-04-26 16:28:21,321:INFO:Initializing Linear Discriminant Analysis
2023-04-26 16:28:21,322:INFO:Total runtime is 0.06183975140253703 minutes
2023-04-26 16:28:21,323:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:21,323:INFO:Initializing create_model()
2023-04-26 16:28:21,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:21,324:INFO:Checking exceptions
2023-04-26 16:28:21,324:INFO:Importing libraries
2023-04-26 16:28:21,324:INFO:Copying training dataset
2023-04-26 16:28:21,327:INFO:Defining folds
2023-04-26 16:28:21,327:INFO:Declaring metric variables
2023-04-26 16:28:21,329:INFO:Importing untrained model
2023-04-26 16:28:21,331:INFO:Linear Discriminant Analysis Imported successfully
2023-04-26 16:28:21,334:INFO:Starting cross validation
2023-04-26 16:28:21,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:21,411:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,412:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,412:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,412:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,413:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,413:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,413:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,413:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,414:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,414:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,414:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,415:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,424:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,425:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,426:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,457:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,458:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,458:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,459:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,459:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,460:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,482:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,482:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,483:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,483:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,484:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,484:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,486:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,487:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,488:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,498:INFO:Calculating mean and std
2023-04-26 16:28:21,499:INFO:Creating metrics dataframe
2023-04-26 16:28:21,514:INFO:Uploading results into container
2023-04-26 16:28:21,514:INFO:Uploading model into container now
2023-04-26 16:28:21,514:INFO:_master_model_container: 26
2023-04-26 16:28:21,514:INFO:_display_container: 3
2023-04-26 16:28:21,515:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-26 16:28:21,515:INFO:create_model() successfully completed......................................
2023-04-26 16:28:21,605:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:21,605:INFO:Creating metrics dataframe
2023-04-26 16:28:21,612:INFO:Initializing Extra Trees Classifier
2023-04-26 16:28:21,612:INFO:Total runtime is 0.0666876475016276 minutes
2023-04-26 16:28:21,614:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:21,614:INFO:Initializing create_model()
2023-04-26 16:28:21,614:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:21,614:INFO:Checking exceptions
2023-04-26 16:28:21,615:INFO:Importing libraries
2023-04-26 16:28:21,615:INFO:Copying training dataset
2023-04-26 16:28:21,618:INFO:Defining folds
2023-04-26 16:28:21,618:INFO:Declaring metric variables
2023-04-26 16:28:21,620:INFO:Importing untrained model
2023-04-26 16:28:21,623:INFO:Extra Trees Classifier Imported successfully
2023-04-26 16:28:21,627:INFO:Starting cross validation
2023-04-26 16:28:21,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:21,866:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,867:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,867:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,868:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,868:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,869:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,869:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,870:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,871:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,876:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,877:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,878:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,894:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,894:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,895:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,895:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,896:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,896:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,914:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,915:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,917:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,920:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,921:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:21,922:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,060:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,061:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,062:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,064:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,065:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,066:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,073:INFO:Calculating mean and std
2023-04-26 16:28:22,074:INFO:Creating metrics dataframe
2023-04-26 16:28:22,088:INFO:Uploading results into container
2023-04-26 16:28:22,089:INFO:Uploading model into container now
2023-04-26 16:28:22,089:INFO:_master_model_container: 27
2023-04-26 16:28:22,089:INFO:_display_container: 3
2023-04-26 16:28:22,089:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-26 16:28:22,089:INFO:create_model() successfully completed......................................
2023-04-26 16:28:22,179:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:22,180:INFO:Creating metrics dataframe
2023-04-26 16:28:22,187:INFO:Initializing Extreme Gradient Boosting
2023-04-26 16:28:22,187:INFO:Total runtime is 0.07626381317774454 minutes
2023-04-26 16:28:22,189:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:22,189:INFO:Initializing create_model()
2023-04-26 16:28:22,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:22,189:INFO:Checking exceptions
2023-04-26 16:28:22,189:INFO:Importing libraries
2023-04-26 16:28:22,189:INFO:Copying training dataset
2023-04-26 16:28:22,192:INFO:Defining folds
2023-04-26 16:28:22,196:INFO:Declaring metric variables
2023-04-26 16:28:22,198:INFO:Importing untrained model
2023-04-26 16:28:22,200:INFO:Extreme Gradient Boosting Imported successfully
2023-04-26 16:28:22,204:INFO:Starting cross validation
2023-04-26 16:28:22,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:22,300:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,301:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,302:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,302:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,303:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,303:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,304:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,305:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,306:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,312:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,313:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,314:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,315:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,316:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,316:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,317:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,317:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,318:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,329:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,330:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,331:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,335:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,336:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,337:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,380:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,381:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,382:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,388:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,389:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,390:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,393:INFO:Calculating mean and std
2023-04-26 16:28:22,393:INFO:Creating metrics dataframe
2023-04-26 16:28:22,408:INFO:Uploading results into container
2023-04-26 16:28:22,409:INFO:Uploading model into container now
2023-04-26 16:28:22,409:INFO:_master_model_container: 28
2023-04-26 16:28:22,409:INFO:_display_container: 3
2023-04-26 16:28:22,409:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-26 16:28:22,409:INFO:create_model() successfully completed......................................
2023-04-26 16:28:22,501:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:22,501:INFO:Creating metrics dataframe
2023-04-26 16:28:22,508:INFO:Initializing Light Gradient Boosting Machine
2023-04-26 16:28:22,508:INFO:Total runtime is 0.08162095149358113 minutes
2023-04-26 16:28:22,510:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:22,510:INFO:Initializing create_model()
2023-04-26 16:28:22,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:22,511:INFO:Checking exceptions
2023-04-26 16:28:22,511:INFO:Importing libraries
2023-04-26 16:28:22,511:INFO:Copying training dataset
2023-04-26 16:28:22,514:INFO:Defining folds
2023-04-26 16:28:22,514:INFO:Declaring metric variables
2023-04-26 16:28:22,516:INFO:Importing untrained model
2023-04-26 16:28:22,518:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-26 16:28:22,522:INFO:Starting cross validation
2023-04-26 16:28:22,523:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:22,660:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,661:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,662:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,664:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,666:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,667:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,679:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,680:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,680:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,681:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,683:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,686:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,693:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,695:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,695:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,696:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,696:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,697:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,712:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,713:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,714:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,714:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,715:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,715:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,802:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,803:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,804:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,804:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,805:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,806:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:22,814:INFO:Calculating mean and std
2023-04-26 16:28:22,815:INFO:Creating metrics dataframe
2023-04-26 16:28:22,828:INFO:Uploading results into container
2023-04-26 16:28:22,829:INFO:Uploading model into container now
2023-04-26 16:28:22,829:INFO:_master_model_container: 29
2023-04-26 16:28:22,829:INFO:_display_container: 3
2023-04-26 16:28:22,830:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 16:28:22,830:INFO:create_model() successfully completed......................................
2023-04-26 16:28:22,920:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:22,920:INFO:Creating metrics dataframe
2023-04-26 16:28:22,928:INFO:Initializing Dummy Classifier
2023-04-26 16:28:22,928:INFO:Total runtime is 0.08860690196355184 minutes
2023-04-26 16:28:22,929:INFO:SubProcess create_model() called ==================================
2023-04-26 16:28:22,930:INFO:Initializing create_model()
2023-04-26 16:28:22,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f8ae39fac80>, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:22,930:INFO:Checking exceptions
2023-04-26 16:28:22,930:INFO:Importing libraries
2023-04-26 16:28:22,930:INFO:Copying training dataset
2023-04-26 16:28:22,933:INFO:Defining folds
2023-04-26 16:28:22,933:INFO:Declaring metric variables
2023-04-26 16:28:22,935:INFO:Importing untrained model
2023-04-26 16:28:22,938:INFO:Dummy Classifier Imported successfully
2023-04-26 16:28:22,941:INFO:Starting cross validation
2023-04-26 16:28:22,942:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:23,002:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,003:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,004:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,004:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,005:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,006:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,007:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,007:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,007:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,008:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,009:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,009:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,023:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,024:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,025:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,025:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,030:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,031:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,032:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,032:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,050:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,051:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,052:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,053:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,061:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,062:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,063:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,063:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,066:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,067:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,068:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,068:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,069:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,070:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,071:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,071:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,081:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,082:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,083:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-26 16:28:23,083:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,087:INFO:Calculating mean and std
2023-04-26 16:28:23,088:INFO:Creating metrics dataframe
2023-04-26 16:28:23,101:INFO:Uploading results into container
2023-04-26 16:28:23,101:INFO:Uploading model into container now
2023-04-26 16:28:23,102:INFO:_master_model_container: 30
2023-04-26 16:28:23,102:INFO:_display_container: 3
2023-04-26 16:28:23,102:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-26 16:28:23,102:INFO:create_model() successfully completed......................................
2023-04-26 16:28:23,192:INFO:SubProcess create_model() end ==================================
2023-04-26 16:28:23,193:INFO:Creating metrics dataframe
2023-04-26 16:28:23,206:INFO:Initializing create_model()
2023-04-26 16:28:23,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:23,206:INFO:Checking exceptions
2023-04-26 16:28:23,207:INFO:Importing libraries
2023-04-26 16:28:23,207:INFO:Copying training dataset
2023-04-26 16:28:23,210:INFO:Defining folds
2023-04-26 16:28:23,210:INFO:Declaring metric variables
2023-04-26 16:28:23,210:INFO:Importing untrained model
2023-04-26 16:28:23,210:INFO:Declaring custom model
2023-04-26 16:28:23,211:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-26 16:28:23,211:INFO:Cross validation set to False
2023-04-26 16:28:23,211:INFO:Fitting Model
2023-04-26 16:28:23,242:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 16:28:23,242:INFO:create_model() successfully completed......................................
2023-04-26 16:28:23,353:INFO:_master_model_container: 30
2023-04-26 16:28:23,353:INFO:_display_container: 3
2023-04-26 16:28:23,354:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 16:28:23,354:INFO:compare_models() successfully completed......................................
2023-04-26 16:28:23,354:INFO:Initializing create_model()
2023-04-26 16:28:23,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-26 16:28:23,355:INFO:Checking exceptions
2023-04-26 16:28:23,369:INFO:Importing libraries
2023-04-26 16:28:23,369:INFO:Copying training dataset
2023-04-26 16:28:23,372:INFO:Defining folds
2023-04-26 16:28:23,372:INFO:Declaring metric variables
2023-04-26 16:28:23,375:INFO:Importing untrained model
2023-04-26 16:28:23,375:INFO:Declaring custom model
2023-04-26 16:28:23,377:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-26 16:28:23,381:INFO:Starting cross validation
2023-04-26 16:28:23,382:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 16:28:23,533:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,534:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,535:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,536:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,537:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,538:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,546:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,548:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,548:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,553:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,557:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,558:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,562:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,563:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,564:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,573:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,574:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,575:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,577:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,578:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,579:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,632:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,634:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,634:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,664:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,665:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,666:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,675:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,676:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,677:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 16:28:23,681:INFO:Calculating mean and std
2023-04-26 16:28:23,682:INFO:Creating metrics dataframe
2023-04-26 16:28:23,685:INFO:Finalizing model
2023-04-26 16:28:23,721:INFO:Uploading results into container
2023-04-26 16:28:23,722:INFO:Uploading model into container now
2023-04-26 16:28:23,729:INFO:_master_model_container: 31
2023-04-26 16:28:23,729:INFO:_display_container: 4
2023-04-26 16:28:23,729:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-26 16:28:23,729:INFO:create_model() successfully completed......................................
2023-04-26 16:57:47,289:INFO:Initializing predict_model()
2023-04-26 16:57:47,290:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f8ae5f8f7f0>)
2023-04-26 16:57:47,290:INFO:Checking exceptions
2023-04-26 16:57:47,290:INFO:Preloading libraries
2023-04-26 16:58:27,046:INFO:Initializing plot_model()
2023-04-26 16:58:27,046:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 16:58:27,047:INFO:Checking exceptions
2023-04-26 16:58:27,050:INFO:Preloading libraries
2023-04-26 16:58:27,071:INFO:Copying training dataset
2023-04-26 16:58:27,071:INFO:Plot type: auc
2023-04-26 16:58:27,141:INFO:Fitting Model
2023-04-26 16:58:27,142:INFO:Scoring test/hold-out set
2023-04-26 16:58:27,299:INFO:Visual Rendered Successfully
2023-04-26 16:58:27,407:INFO:plot_model() successfully completed......................................
2023-04-26 16:59:07,978:INFO:Initializing plot_model()
2023-04-26 16:59:07,979:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 16:59:07,979:INFO:Checking exceptions
2023-04-26 16:59:07,982:INFO:Preloading libraries
2023-04-26 16:59:07,999:INFO:Copying training dataset
2023-04-26 16:59:07,999:INFO:Plot type: error
2023-04-26 16:59:08,070:INFO:Fitting Model
2023-04-26 16:59:08,070:INFO:Scoring test/hold-out set
2023-04-26 16:59:08,194:INFO:Visual Rendered Successfully
2023-04-26 16:59:08,300:INFO:plot_model() successfully completed......................................
2023-04-26 17:00:05,666:INFO:Initializing plot_model()
2023-04-26 17:00:05,667:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:00:05,667:INFO:Checking exceptions
2023-04-26 17:00:05,671:INFO:Preloading libraries
2023-04-26 17:00:05,685:INFO:Copying training dataset
2023-04-26 17:00:05,685:INFO:Plot type: learning
2023-04-26 17:00:05,756:INFO:Fitting Model
2023-04-26 17:00:15,015:INFO:Visual Rendered Successfully
2023-04-26 17:00:15,150:INFO:plot_model() successfully completed......................................
2023-04-26 17:02:52,376:INFO:Initializing predict_model()
2023-04-26 17:02:52,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f8aa3801000>)
2023-04-26 17:02:52,377:INFO:Checking exceptions
2023-04-26 17:02:52,377:INFO:Preloading libraries
2023-04-26 17:02:55,008:INFO:Initializing plot_model()
2023-04-26 17:02:55,008:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:02:55,009:INFO:Checking exceptions
2023-04-26 17:02:55,012:INFO:Preloading libraries
2023-04-26 17:02:55,024:INFO:Copying training dataset
2023-04-26 17:02:55,024:INFO:Plot type: auc
2023-04-26 17:02:55,092:INFO:Fitting Model
2023-04-26 17:02:55,092:INFO:Scoring test/hold-out set
2023-04-26 17:02:55,241:INFO:Visual Rendered Successfully
2023-04-26 17:02:55,347:INFO:plot_model() successfully completed......................................
2023-04-26 17:02:57,571:INFO:Initializing plot_model()
2023-04-26 17:02:57,571:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:02:57,572:INFO:Checking exceptions
2023-04-26 17:02:57,576:INFO:Preloading libraries
2023-04-26 17:02:57,592:INFO:Copying training dataset
2023-04-26 17:02:57,592:INFO:Plot type: error
2023-04-26 17:02:57,661:INFO:Fitting Model
2023-04-26 17:02:57,661:INFO:Scoring test/hold-out set
2023-04-26 17:02:57,787:INFO:Visual Rendered Successfully
2023-04-26 17:02:57,896:INFO:plot_model() successfully completed......................................
2023-04-26 17:02:59,922:INFO:Initializing plot_model()
2023-04-26 17:02:59,923:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:02:59,923:INFO:Checking exceptions
2023-04-26 17:02:59,926:INFO:Preloading libraries
2023-04-26 17:02:59,940:INFO:Copying training dataset
2023-04-26 17:02:59,940:INFO:Plot type: learning
2023-04-26 17:03:00,007:INFO:Fitting Model
2023-04-26 17:03:06,199:INFO:Visual Rendered Successfully
2023-04-26 17:03:06,303:INFO:plot_model() successfully completed......................................
2023-04-26 17:03:30,231:INFO:Initializing plot_model()
2023-04-26 17:03:30,231:INFO:plot_model(plot=vc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:03:30,232:INFO:Checking exceptions
2023-04-26 17:03:30,237:INFO:Preloading libraries
2023-04-26 17:03:30,249:INFO:Copying training dataset
2023-04-26 17:03:30,249:INFO:Plot type: vc
2023-04-26 17:03:30,250:INFO:Determining param_name
2023-04-26 17:03:30,250:INFO:param_name: max_depth
2023-04-26 17:03:30,317:INFO:Fitting Model
2023-04-26 17:03:34,627:INFO:Visual Rendered Successfully
2023-04-26 17:03:34,735:INFO:plot_model() successfully completed......................................
2023-04-26 17:04:46,208:INFO:Initializing create_model()
2023-04-26 17:04:46,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=randomforest, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-26 17:04:46,209:INFO:Checking exceptions
2023-04-26 17:05:46,272:INFO:Initializing create_model()
2023-04-26 17:05:46,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-26 17:05:46,273:INFO:Checking exceptions
2023-04-26 17:05:46,293:INFO:Importing libraries
2023-04-26 17:05:46,293:INFO:Copying training dataset
2023-04-26 17:05:46,297:INFO:Defining folds
2023-04-26 17:05:46,297:INFO:Declaring metric variables
2023-04-26 17:05:46,300:INFO:Importing untrained model
2023-04-26 17:05:46,303:INFO:Random Forest Classifier Imported successfully
2023-04-26 17:05:46,308:INFO:Starting cross validation
2023-04-26 17:05:46,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 17:05:47,701:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,701:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,702:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,702:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,702:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,703:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,703:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,703:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,704:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,704:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,704:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,705:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,711:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,712:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,713:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,722:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,722:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,724:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,724:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,725:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,725:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,732:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,733:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,734:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,896:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,898:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,898:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,899:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,899:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,900:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:05:47,910:INFO:Calculating mean and std
2023-04-26 17:05:47,911:INFO:Creating metrics dataframe
2023-04-26 17:05:47,915:INFO:Finalizing model
2023-04-26 17:05:48,193:INFO:Uploading results into container
2023-04-26 17:05:48,193:INFO:Uploading model into container now
2023-04-26 17:05:48,200:INFO:_master_model_container: 32
2023-04-26 17:05:48,200:INFO:_display_container: 7
2023-04-26 17:05:48,201:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-26 17:05:48,201:INFO:create_model() successfully completed......................................
2023-04-26 17:07:01,081:INFO:Initializing predict_model()
2023-04-26 17:07:01,082:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f8aa400d990>)
2023-04-26 17:07:01,082:INFO:Checking exceptions
2023-04-26 17:07:01,082:INFO:Preloading libraries
2023-04-26 17:07:32,473:INFO:Initializing plot_model()
2023-04-26 17:07:32,474:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:07:32,474:INFO:Checking exceptions
2023-04-26 17:07:32,490:INFO:Preloading libraries
2023-04-26 17:07:32,499:INFO:Copying training dataset
2023-04-26 17:07:32,499:INFO:Plot type: auc
2023-04-26 17:07:32,567:INFO:Fitting Model
2023-04-26 17:07:32,567:INFO:Scoring test/hold-out set
2023-04-26 17:07:32,737:INFO:Visual Rendered Successfully
2023-04-26 17:07:32,860:INFO:plot_model() successfully completed......................................
2023-04-26 17:08:09,134:INFO:Initializing plot_model()
2023-04-26 17:08:09,138:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:08:09,138:INFO:Checking exceptions
2023-04-26 17:08:09,159:INFO:Preloading libraries
2023-04-26 17:08:09,168:INFO:Copying training dataset
2023-04-26 17:08:09,168:INFO:Plot type: error
2023-04-26 17:08:09,236:INFO:Fitting Model
2023-04-26 17:08:09,237:INFO:Scoring test/hold-out set
2023-04-26 17:08:09,391:INFO:Visual Rendered Successfully
2023-04-26 17:08:09,531:INFO:plot_model() successfully completed......................................
2023-04-26 17:11:38,042:INFO:Initializing plot_model()
2023-04-26 17:11:38,045:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:11:38,045:INFO:Checking exceptions
2023-04-26 17:11:38,070:INFO:Preloading libraries
2023-04-26 17:11:38,079:INFO:Copying training dataset
2023-04-26 17:11:38,079:INFO:Plot type: learning
2023-04-26 17:11:38,153:INFO:Fitting Model
2023-04-26 17:11:46,934:INFO:Visual Rendered Successfully
2023-04-26 17:11:47,127:INFO:plot_model() successfully completed......................................
2023-04-26 17:12:18,900:INFO:Initializing plot_model()
2023-04-26 17:12:18,903:INFO:plot_model(plot=vc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:12:18,907:INFO:Checking exceptions
2023-04-26 17:12:18,926:INFO:Preloading libraries
2023-04-26 17:12:18,936:INFO:Copying training dataset
2023-04-26 17:12:18,936:INFO:Plot type: vc
2023-04-26 17:12:18,937:INFO:Determining param_name
2023-04-26 17:12:18,937:INFO:param_name: max_depth
2023-04-26 17:12:19,007:INFO:Fitting Model
2023-04-26 17:12:25,344:INFO:Visual Rendered Successfully
2023-04-26 17:12:25,489:INFO:plot_model() successfully completed......................................
2023-04-26 17:21:38,749:INFO:Initializing create_model()
2023-04-26 17:21:38,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-26 17:21:38,750:INFO:Checking exceptions
2023-04-26 17:21:38,771:INFO:Importing libraries
2023-04-26 17:21:38,771:INFO:Copying training dataset
2023-04-26 17:21:38,777:INFO:Defining folds
2023-04-26 17:21:38,777:INFO:Declaring metric variables
2023-04-26 17:21:38,779:INFO:Importing untrained model
2023-04-26 17:21:38,782:INFO:K Neighbors Classifier Imported successfully
2023-04-26 17:21:38,786:INFO:Starting cross validation
2023-04-26 17:21:38,788:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 17:21:42,410:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,411:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,411:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,413:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,413:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,415:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,420:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,421:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,422:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,427:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,428:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,429:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,430:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,432:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,433:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,433:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,434:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,435:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,436:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,437:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,438:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,440:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,441:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,442:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,545:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,546:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,547:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,558:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,559:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,560:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:21:42,564:INFO:Calculating mean and std
2023-04-26 17:21:42,565:INFO:Creating metrics dataframe
2023-04-26 17:21:42,571:INFO:Finalizing model
2023-04-26 17:21:42,613:INFO:Uploading results into container
2023-04-26 17:21:42,614:INFO:Uploading model into container now
2023-04-26 17:21:42,621:INFO:_master_model_container: 33
2023-04-26 17:21:42,621:INFO:_display_container: 9
2023-04-26 17:21:42,621:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-26 17:21:42,621:INFO:create_model() successfully completed......................................
2023-04-26 17:23:12,463:INFO:Initializing predict_model()
2023-04-26 17:23:12,466:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f8aa400d7e0>)
2023-04-26 17:23:12,466:INFO:Checking exceptions
2023-04-26 17:23:12,466:INFO:Preloading libraries
2023-04-26 17:23:37,599:INFO:Initializing plot_model()
2023-04-26 17:23:37,600:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:23:37,600:INFO:Checking exceptions
2023-04-26 17:23:37,603:INFO:Preloading libraries
2023-04-26 17:23:37,603:INFO:Copying training dataset
2023-04-26 17:23:37,603:INFO:Plot type: auc
2023-04-26 17:23:37,670:INFO:Fitting Model
2023-04-26 17:23:37,670:INFO:Scoring test/hold-out set
2023-04-26 17:23:37,853:INFO:Visual Rendered Successfully
2023-04-26 17:23:37,975:INFO:plot_model() successfully completed......................................
2023-04-26 17:24:03,969:INFO:Initializing plot_model()
2023-04-26 17:24:03,969:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:24:03,970:INFO:Checking exceptions
2023-04-26 17:24:03,973:INFO:Preloading libraries
2023-04-26 17:24:03,974:INFO:Copying training dataset
2023-04-26 17:24:03,974:INFO:Plot type: learning
2023-04-26 17:24:04,041:INFO:Fitting Model
2023-04-26 17:24:05,193:INFO:Visual Rendered Successfully
2023-04-26 17:24:05,326:INFO:plot_model() successfully completed......................................
2023-04-26 17:24:35,853:INFO:Initializing plot_model()
2023-04-26 17:24:35,854:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:24:35,854:INFO:Checking exceptions
2023-04-26 17:24:35,858:INFO:Preloading libraries
2023-04-26 17:24:35,859:INFO:Copying training dataset
2023-04-26 17:24:35,859:INFO:Plot type: error
2023-04-26 17:24:35,927:INFO:Fitting Model
2023-04-26 17:24:35,928:INFO:Scoring test/hold-out set
2023-04-26 17:24:36,111:INFO:Visual Rendered Successfully
2023-04-26 17:24:36,239:INFO:plot_model() successfully completed......................................
2023-04-26 17:24:54,593:INFO:Initializing plot_model()
2023-04-26 17:24:54,594:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:24:54,594:INFO:Checking exceptions
2023-04-26 17:24:54,599:INFO:Preloading libraries
2023-04-26 17:24:54,600:INFO:Copying training dataset
2023-04-26 17:24:54,600:INFO:Plot type: learning
2023-04-26 17:24:54,669:INFO:Fitting Model
2023-04-26 17:24:55,872:INFO:Visual Rendered Successfully
2023-04-26 17:24:56,000:INFO:plot_model() successfully completed......................................
2023-04-26 17:25:07,259:INFO:Initializing plot_model()
2023-04-26 17:25:07,259:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:25:07,259:INFO:Checking exceptions
2023-04-26 17:25:07,271:INFO:Preloading libraries
2023-04-26 17:25:07,273:INFO:Copying training dataset
2023-04-26 17:25:07,273:INFO:Plot type: learning
2023-04-26 17:25:07,344:INFO:Fitting Model
2023-04-26 17:25:08,481:INFO:Visual Rendered Successfully
2023-04-26 17:25:08,612:INFO:plot_model() successfully completed......................................
2023-04-26 17:25:17,205:INFO:Initializing plot_model()
2023-04-26 17:25:17,206:INFO:plot_model(plot=vc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:25:17,206:INFO:Checking exceptions
2023-04-26 17:25:17,209:INFO:Preloading libraries
2023-04-26 17:25:17,209:INFO:Copying training dataset
2023-04-26 17:25:17,209:INFO:Plot type: vc
2023-04-26 17:25:17,210:INFO:Determining param_name
2023-04-26 17:25:17,210:INFO:param_name: n_neighbors
2023-04-26 17:25:17,276:INFO:Fitting Model
2023-04-26 17:25:19,032:INFO:Visual Rendered Successfully
2023-04-26 17:25:19,160:INFO:plot_model() successfully completed......................................
2023-04-26 17:29:19,349:INFO:Initializing predict_model()
2023-04-26 17:29:19,351:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f8aa400fac0>)
2023-04-26 17:29:19,351:INFO:Checking exceptions
2023-04-26 17:29:19,351:INFO:Preloading libraries
2023-04-26 17:29:40,406:INFO:Initializing plot_model()
2023-04-26 17:29:40,406:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:29:40,406:INFO:Checking exceptions
2023-04-26 17:29:40,410:INFO:Preloading libraries
2023-04-26 17:29:40,411:INFO:Copying training dataset
2023-04-26 17:29:40,411:INFO:Plot type: auc
2023-04-26 17:29:40,483:INFO:Fitting Model
2023-04-26 17:29:40,483:INFO:Scoring test/hold-out set
2023-04-26 17:29:40,767:INFO:Visual Rendered Successfully
2023-04-26 17:29:40,954:INFO:plot_model() successfully completed......................................
2023-04-26 17:29:44,890:INFO:Initializing plot_model()
2023-04-26 17:29:44,891:INFO:plot_model(plot=error, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:29:44,891:INFO:Checking exceptions
2023-04-26 17:29:44,893:INFO:Preloading libraries
2023-04-26 17:29:44,894:INFO:Copying training dataset
2023-04-26 17:29:44,894:INFO:Plot type: error
2023-04-26 17:29:44,966:INFO:Fitting Model
2023-04-26 17:29:44,966:INFO:Scoring test/hold-out set
2023-04-26 17:29:45,235:INFO:Visual Rendered Successfully
2023-04-26 17:29:45,363:INFO:plot_model() successfully completed......................................
2023-04-26 17:29:49,269:INFO:Initializing plot_model()
2023-04-26 17:29:49,269:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:29:49,270:INFO:Checking exceptions
2023-04-26 17:29:49,274:INFO:Preloading libraries
2023-04-26 17:29:49,274:INFO:Copying training dataset
2023-04-26 17:29:49,275:INFO:Plot type: learning
2023-04-26 17:29:49,347:INFO:Fitting Model
2023-04-26 17:29:55,666:INFO:Visual Rendered Successfully
2023-04-26 17:29:55,791:INFO:plot_model() successfully completed......................................
2023-04-26 17:30:24,870:INFO:Initializing plot_model()
2023-04-26 17:30:24,870:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:30:24,870:INFO:Checking exceptions
2023-04-26 17:30:24,874:INFO:Preloading libraries
2023-04-26 17:30:24,874:INFO:Copying training dataset
2023-04-26 17:30:24,874:INFO:Plot type: learning
2023-04-26 17:30:24,949:INFO:Fitting Model
2023-04-26 17:30:30,707:INFO:Visual Rendered Successfully
2023-04-26 17:30:30,833:INFO:plot_model() successfully completed......................................
2023-04-26 17:30:41,049:INFO:Initializing plot_model()
2023-04-26 17:30:41,049:INFO:plot_model(plot=vc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:30:41,049:INFO:Checking exceptions
2023-04-26 17:30:41,052:INFO:Preloading libraries
2023-04-26 17:30:41,053:INFO:Copying training dataset
2023-04-26 17:30:41,053:INFO:Plot type: vc
2023-04-26 17:30:41,054:INFO:Determining param_name
2023-04-26 17:30:41,054:INFO:param_name: n_neighbors
2023-04-26 17:30:41,127:INFO:Fitting Model
2023-04-26 17:30:49,067:INFO:Visual Rendered Successfully
2023-04-26 17:30:49,193:INFO:plot_model() successfully completed......................................
2023-04-26 17:32:52,356:INFO:Initializing predict_model()
2023-04-26 17:32:52,356:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f8af2ac7250>)
2023-04-26 17:32:52,356:INFO:Checking exceptions
2023-04-26 17:32:52,357:INFO:Preloading libraries
2023-04-26 17:40:26,577:INFO:Initializing create_model()
2023-04-26 17:40:26,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-26 17:40:26,579:INFO:Checking exceptions
2023-04-26 17:40:26,609:INFO:Importing libraries
2023-04-26 17:40:26,609:INFO:Copying training dataset
2023-04-26 17:40:26,616:INFO:Defining folds
2023-04-26 17:40:26,616:INFO:Declaring metric variables
2023-04-26 17:40:26,619:INFO:Importing untrained model
2023-04-26 17:40:26,622:INFO:K Neighbors Classifier Imported successfully
2023-04-26 17:40:26,627:INFO:Starting cross validation
2023-04-26 17:40:26,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-26 17:40:30,421:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,422:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,423:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,435:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,436:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,437:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,437:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,438:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,439:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,439:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,440:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,441:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,444:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,445:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,446:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,450:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,452:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,453:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,454:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,455:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,457:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,458:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,463:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,474:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,565:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,566:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,568:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,575:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,576:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,577:WARNING:/Users/limuqing/opt/anaconda3/envs/ANLY590/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-26 17:40:30,581:INFO:Calculating mean and std
2023-04-26 17:40:30,583:INFO:Creating metrics dataframe
2023-04-26 17:40:30,590:INFO:Finalizing model
2023-04-26 17:40:30,635:INFO:Uploading results into container
2023-04-26 17:40:30,636:INFO:Uploading model into container now
2023-04-26 17:40:30,645:INFO:_master_model_container: 34
2023-04-26 17:40:30,645:INFO:_display_container: 11
2023-04-26 17:40:30,645:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-26 17:40:30,645:INFO:create_model() successfully completed......................................
2023-04-26 17:40:41,703:INFO:Initializing predict_model()
2023-04-26 17:40:41,704:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f8ae2ecf2e0>)
2023-04-26 17:40:41,705:INFO:Checking exceptions
2023-04-26 17:40:41,705:INFO:Preloading libraries
2023-04-26 17:40:43,970:INFO:Initializing plot_model()
2023-04-26 17:40:43,970:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:40:43,970:INFO:Checking exceptions
2023-04-26 17:40:43,974:INFO:Preloading libraries
2023-04-26 17:40:43,974:INFO:Copying training dataset
2023-04-26 17:40:43,974:INFO:Plot type: auc
2023-04-26 17:40:44,048:INFO:Fitting Model
2023-04-26 17:40:44,049:INFO:Scoring test/hold-out set
2023-04-26 17:40:44,227:INFO:Visual Rendered Successfully
2023-04-26 17:40:44,354:INFO:plot_model() successfully completed......................................
2023-04-26 17:40:49,909:INFO:Initializing plot_model()
2023-04-26 17:40:49,910:INFO:plot_model(plot=vc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:40:49,910:INFO:Checking exceptions
2023-04-26 17:40:49,913:INFO:Preloading libraries
2023-04-26 17:40:49,914:INFO:Copying training dataset
2023-04-26 17:40:49,914:INFO:Plot type: vc
2023-04-26 17:40:49,915:INFO:Determining param_name
2023-04-26 17:40:49,915:INFO:param_name: n_neighbors
2023-04-26 17:40:49,984:INFO:Fitting Model
2023-04-26 17:40:51,780:INFO:Visual Rendered Successfully
2023-04-26 17:40:51,908:INFO:plot_model() successfully completed......................................
2023-04-26 17:44:45,848:INFO:Initializing predict_model()
2023-04-26 17:44:45,850:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x7f8ae2f15c60>)
2023-04-26 17:44:45,850:INFO:Checking exceptions
2023-04-26 17:44:45,850:INFO:Preloading libraries
2023-04-26 17:44:55,328:INFO:Initializing plot_model()
2023-04-26 17:44:55,328:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:44:55,329:INFO:Checking exceptions
2023-04-26 17:44:55,334:INFO:Preloading libraries
2023-04-26 17:44:55,334:INFO:Copying training dataset
2023-04-26 17:44:55,335:INFO:Plot type: auc
2023-04-26 17:44:55,416:INFO:Fitting Model
2023-04-26 17:44:55,417:INFO:Scoring test/hold-out set
2023-04-26 17:44:55,735:INFO:Visual Rendered Successfully
2023-04-26 17:44:55,956:INFO:plot_model() successfully completed......................................
2023-04-26 17:45:00,296:INFO:Initializing plot_model()
2023-04-26 17:45:00,297:INFO:plot_model(plot=learning, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:45:00,297:INFO:Checking exceptions
2023-04-26 17:45:00,301:INFO:Preloading libraries
2023-04-26 17:45:00,301:INFO:Copying training dataset
2023-04-26 17:45:00,301:INFO:Plot type: learning
2023-04-26 17:45:00,373:INFO:Fitting Model
2023-04-26 17:45:01,762:INFO:Visual Rendered Successfully
2023-04-26 17:45:01,893:INFO:plot_model() successfully completed......................................
2023-04-26 17:45:05,713:INFO:Initializing plot_model()
2023-04-26 17:45:05,713:INFO:plot_model(plot=vc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f8ad065ab60>, system=True)
2023-04-26 17:45:05,713:INFO:Checking exceptions
2023-04-26 17:45:05,717:INFO:Preloading libraries
2023-04-26 17:45:05,718:INFO:Copying training dataset
2023-04-26 17:45:05,718:INFO:Plot type: vc
2023-04-26 17:45:05,719:INFO:Determining param_name
2023-04-26 17:45:05,719:INFO:param_name: n_neighbors
2023-04-26 17:45:05,790:INFO:Fitting Model
2023-04-26 17:45:07,578:INFO:Visual Rendered Successfully
2023-04-26 17:45:07,705:INFO:plot_model() successfully completed......................................
2023-04-28 20:38:03,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 20:38:03,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 20:38:03,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 20:38:03,343:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-28 20:38:05,857:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-28 20:38:13,861:INFO:PyCaret ClassificationExperiment
2023-04-28 20:38:13,861:INFO:Logging name: clf-default-name
2023-04-28 20:38:13,861:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-28 20:38:13,861:INFO:version 3.0.0
2023-04-28 20:38:13,861:INFO:Initializing setup()
2023-04-28 20:38:13,861:INFO:self.USI: cba7
2023-04-28 20:38:13,861:INFO:self._variable_keys: {'idx', 'is_multiclass', 'fold_shuffle_param', '_ml_usecase', 'y_test', 'fix_imbalance', 'data', 'pipeline', 'exp_id', 'y_train', 'X_train', 'html_param', 'fold_groups_param', 'USI', 'logging_param', 'memory', 'exp_name_log', 'target_param', 'fold_generator', 'log_plots_param', 'X_test', 'n_jobs_param', 'gpu_n_jobs_param', 'X', 'gpu_param', 'y', '_available_plots', 'seed'}
2023-04-28 20:38:13,861:INFO:Checking environment
2023-04-28 20:38:13,861:INFO:python_version: 3.9.16
2023-04-28 20:38:13,861:INFO:python_build: ('main', 'Mar  8 2023 04:29:24')
2023-04-28 20:38:13,861:INFO:machine: arm64
2023-04-28 20:38:13,861:INFO:platform: macOS-13.2.1-arm64-arm-64bit
2023-04-28 20:38:13,861:INFO:Memory: svmem(total=17179869184, available=3879796736, percent=77.4, used=6815252480, free=120373248, active=3771154432, inactive=3732766720, wired=3044098048)
2023-04-28 20:38:13,861:INFO:Physical Core: 8
2023-04-28 20:38:13,861:INFO:Logical Core: 8
2023-04-28 20:38:13,861:INFO:Checking libraries
2023-04-28 20:38:13,861:INFO:System:
2023-04-28 20:38:13,861:INFO:    python: 3.9.16 (main, Mar  8 2023, 04:29:24)  [Clang 14.0.6 ]
2023-04-28 20:38:13,861:INFO:executable: /Users/limuqing/anaconda3/envs/tf_env/bin/python
2023-04-28 20:38:13,861:INFO:   machine: macOS-13.2.1-arm64-arm-64bit
2023-04-28 20:38:13,861:INFO:PyCaret required dependencies:
2023-04-28 20:38:13,861:INFO:                 pip: 23.0.1
2023-04-28 20:38:13,861:INFO:          setuptools: 66.0.0
2023-04-28 20:38:13,861:INFO:             pycaret: 3.0.0
2023-04-28 20:38:13,861:INFO:             IPython: 8.12.0
2023-04-28 20:38:13,861:INFO:          ipywidgets: 8.0.6
2023-04-28 20:38:13,861:INFO:                tqdm: 4.65.0
2023-04-28 20:38:13,861:INFO:               numpy: 1.23.5
2023-04-28 20:38:13,861:INFO:              pandas: 1.5.3
2023-04-28 20:38:13,861:INFO:              jinja2: 3.1.2
2023-04-28 20:38:13,861:INFO:               scipy: 1.10.1
2023-04-28 20:38:13,861:INFO:              joblib: 1.2.0
2023-04-28 20:38:13,861:INFO:             sklearn: 1.2.2
2023-04-28 20:38:13,861:INFO:                pyod: 1.0.9
2023-04-28 20:38:13,862:INFO:            imblearn: 0.10.1
2023-04-28 20:38:13,862:INFO:   category_encoders: 2.6.0
2023-04-28 20:38:13,862:INFO:            lightgbm: 3.3.5
2023-04-28 20:38:13,862:INFO:               numba: 0.56.4
2023-04-28 20:38:13,862:INFO:            requests: 2.29.0
2023-04-28 20:38:13,862:INFO:          matplotlib: 3.7.1
2023-04-28 20:38:13,862:INFO:          scikitplot: 0.3.7
2023-04-28 20:38:13,862:INFO:         yellowbrick: 1.5
2023-04-28 20:38:13,862:INFO:              plotly: 5.14.1
2023-04-28 20:38:13,862:INFO:             kaleido: 0.2.1
2023-04-28 20:38:13,862:INFO:         statsmodels: 0.13.5
2023-04-28 20:38:13,862:INFO:              sktime: 0.17.2
2023-04-28 20:38:13,862:INFO:               tbats: 1.1.3
2023-04-28 20:38:13,862:INFO:            pmdarima: 2.0.3
2023-04-28 20:38:13,862:INFO:              psutil: 5.9.0
2023-04-28 20:38:13,862:INFO:PyCaret optional dependencies:
2023-04-28 20:38:13,871:INFO:                shap: Not installed
2023-04-28 20:38:13,871:INFO:           interpret: Not installed
2023-04-28 20:38:13,871:INFO:                umap: Not installed
2023-04-28 20:38:13,871:INFO:    pandas_profiling: Not installed
2023-04-28 20:38:13,871:INFO:  explainerdashboard: Not installed
2023-04-28 20:38:13,871:INFO:             autoviz: 0.1.601
2023-04-28 20:38:13,871:INFO:           fairlearn: Not installed
2023-04-28 20:38:13,871:INFO:             xgboost: 1.7.5
2023-04-28 20:38:13,871:INFO:            catboost: Not installed
2023-04-28 20:38:13,871:INFO:              kmodes: Not installed
2023-04-28 20:38:13,871:INFO:             mlxtend: Not installed
2023-04-28 20:38:13,871:INFO:       statsforecast: Not installed
2023-04-28 20:38:13,872:INFO:        tune_sklearn: Not installed
2023-04-28 20:38:13,872:INFO:                 ray: Not installed
2023-04-28 20:38:13,872:INFO:            hyperopt: Not installed
2023-04-28 20:38:13,872:INFO:              optuna: Not installed
2023-04-28 20:38:13,872:INFO:               skopt: Not installed
2023-04-28 20:38:13,872:INFO:              mlflow: Not installed
2023-04-28 20:38:13,872:INFO:              gradio: Not installed
2023-04-28 20:38:13,872:INFO:             fastapi: Not installed
2023-04-28 20:38:13,872:INFO:             uvicorn: Not installed
2023-04-28 20:38:13,872:INFO:              m2cgen: Not installed
2023-04-28 20:38:13,872:INFO:           evidently: Not installed
2023-04-28 20:38:13,872:INFO:               fugue: Not installed
2023-04-28 20:38:13,872:INFO:           streamlit: Not installed
2023-04-28 20:38:13,872:INFO:             prophet: Not installed
2023-04-28 20:38:13,872:INFO:None
2023-04-28 20:38:13,872:INFO:Set up data.
2023-04-28 20:38:13,877:INFO:Set up train/test split.
2023-04-28 20:38:13,883:INFO:Set up index.
2023-04-28 20:38:13,883:INFO:Set up folding strategy.
2023-04-28 20:38:13,883:INFO:Assigning column types.
2023-04-28 20:38:13,885:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-28 20:38:13,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 20:38:13,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 20:38:13,918:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-28 20:38:14,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:38:14,113:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-28 20:38:14,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 20:38:14,126:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-28 20:38:14,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:38:14,128:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-28 20:38:14,146:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 20:38:14,157:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-28 20:38:14,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:38:14,176:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-28 20:38:14,187:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-28 20:38:14,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:38:14,188:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-28 20:38:14,217:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-28 20:38:14,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:38:14,247:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-28 20:38:14,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:38:14,249:INFO:Preparing preprocessing pipeline...
2023-04-28 20:38:14,250:INFO:Set up label encoding.
2023-04-28 20:38:14,250:INFO:Set up simple imputation.
2023-04-28 20:38:14,250:INFO:Set up feature normalization.
2023-04-28 20:38:14,250:INFO:Set up column name cleaning.
2023-04-28 20:38:14,268:INFO:Finished creating preprocessing pipeline.
2023-04-28 20:38:14,271:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/k4/s8f00krn1f70p5gvf3wgc2tr0000gn/T/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['baseline value', 'accelerations',
                                             'fetal_movement',
                                             'uterine_contractions',
                                             'light_decele...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-04-28 20:38:14,271:INFO:Creating final display dataframe.
2023-04-28 20:38:14,320:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target            fetal_health
2                   Target type              Multiclass
3                Target mapping  1.0: 0, 2.0: 1, 3.0: 2
4           Original data shape              (3966, 22)
5        Transformed data shape              (3966, 22)
6   Transformed train set shape              (2776, 22)
7    Transformed test set shape              (1190, 22)
8              Numeric features                      21
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13                    Normalize                    True
14             Normalize method                  zscore
15               Fold Generator         StratifiedKFold
16                  Fold Number                      10
17                     CPU Jobs                      -1
18                      Use GPU                   False
19               Log Experiment                   False
20              Experiment Name        clf-default-name
21                          USI                    cba7
2023-04-28 20:38:14,353:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-28 20:38:14,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:38:14,387:INFO:Soft dependency imported: xgboost: 1.7.5
2023-04-28 20:38:14,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-28 20:38:14,389:INFO:setup() successfully completed in 0.54s...............
2023-04-28 20:38:18,440:INFO:Initializing compare_models()
2023-04-28 20:38:18,440:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-28 20:38:18,440:INFO:Checking exceptions
2023-04-28 20:38:18,444:INFO:Preparing display monitor
2023-04-28 20:38:18,543:INFO:Initializing Logistic Regression
2023-04-28 20:38:18,543:INFO:Total runtime is 3.3020973205566405e-06 minutes
2023-04-28 20:38:18,545:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:18,545:INFO:Initializing create_model()
2023-04-28 20:38:18,545:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:18,545:INFO:Checking exceptions
2023-04-28 20:38:18,545:INFO:Importing libraries
2023-04-28 20:38:18,545:INFO:Copying training dataset
2023-04-28 20:38:18,549:INFO:Defining folds
2023-04-28 20:38:18,549:INFO:Declaring metric variables
2023-04-28 20:38:18,551:INFO:Importing untrained model
2023-04-28 20:38:18,552:INFO:Logistic Regression Imported successfully
2023-04-28 20:38:18,555:INFO:Starting cross validation
2023-04-28 20:38:18,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:23,524:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,525:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,526:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,530:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,531:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,531:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,541:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,542:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,543:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,553:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,553:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,554:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,563:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,564:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,565:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,576:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,577:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,578:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,579:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,579:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,580:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,586:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,587:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,588:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,655:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,655:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,656:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,656:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,657:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,657:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:23,665:INFO:Calculating mean and std
2023-04-28 20:38:23,666:INFO:Creating metrics dataframe
2023-04-28 20:38:23,677:INFO:Uploading results into container
2023-04-28 20:38:23,678:INFO:Uploading model into container now
2023-04-28 20:38:23,678:INFO:_master_model_container: 1
2023-04-28 20:38:23,678:INFO:_display_container: 2
2023-04-28 20:38:23,678:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-28 20:38:23,678:INFO:create_model() successfully completed......................................
2023-04-28 20:38:24,504:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:24,504:INFO:Creating metrics dataframe
2023-04-28 20:38:24,508:INFO:Initializing K Neighbors Classifier
2023-04-28 20:38:24,508:INFO:Total runtime is 0.09940869808197021 minutes
2023-04-28 20:38:24,509:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:24,509:INFO:Initializing create_model()
2023-04-28 20:38:24,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:24,509:INFO:Checking exceptions
2023-04-28 20:38:24,509:INFO:Importing libraries
2023-04-28 20:38:24,509:INFO:Copying training dataset
2023-04-28 20:38:24,514:INFO:Defining folds
2023-04-28 20:38:24,514:INFO:Declaring metric variables
2023-04-28 20:38:24,515:INFO:Importing untrained model
2023-04-28 20:38:24,516:INFO:K Neighbors Classifier Imported successfully
2023-04-28 20:38:24,519:INFO:Starting cross validation
2023-04-28 20:38:24,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:24,595:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,596:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,596:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,602:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,603:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,603:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,604:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,605:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,607:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,607:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,608:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,611:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,611:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,612:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,612:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,619:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,620:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,620:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,645:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,645:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,646:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,651:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,652:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,652:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,654:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,654:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,655:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,657:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,658:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,658:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,664:INFO:Calculating mean and std
2023-04-28 20:38:24,665:INFO:Creating metrics dataframe
2023-04-28 20:38:24,674:INFO:Uploading results into container
2023-04-28 20:38:24,674:INFO:Uploading model into container now
2023-04-28 20:38:24,674:INFO:_master_model_container: 2
2023-04-28 20:38:24,674:INFO:_display_container: 2
2023-04-28 20:38:24,675:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-28 20:38:24,675:INFO:create_model() successfully completed......................................
2023-04-28 20:38:24,758:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:24,758:INFO:Creating metrics dataframe
2023-04-28 20:38:24,761:INFO:Initializing Naive Bayes
2023-04-28 20:38:24,761:INFO:Total runtime is 0.10363713105519612 minutes
2023-04-28 20:38:24,763:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:24,763:INFO:Initializing create_model()
2023-04-28 20:38:24,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:24,763:INFO:Checking exceptions
2023-04-28 20:38:24,763:INFO:Importing libraries
2023-04-28 20:38:24,763:INFO:Copying training dataset
2023-04-28 20:38:24,767:INFO:Defining folds
2023-04-28 20:38:24,767:INFO:Declaring metric variables
2023-04-28 20:38:24,769:INFO:Importing untrained model
2023-04-28 20:38:24,770:INFO:Naive Bayes Imported successfully
2023-04-28 20:38:24,773:INFO:Starting cross validation
2023-04-28 20:38:24,773:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:24,816:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,817:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,817:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,818:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,818:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,818:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,821:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,822:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,822:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,822:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,822:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,823:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,837:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,838:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,838:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,839:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,839:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,840:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,846:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,847:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,848:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,856:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,857:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,857:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,864:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,865:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,865:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,865:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,865:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,866:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:24,885:INFO:Calculating mean and std
2023-04-28 20:38:24,886:INFO:Creating metrics dataframe
2023-04-28 20:38:24,895:INFO:Uploading results into container
2023-04-28 20:38:24,895:INFO:Uploading model into container now
2023-04-28 20:38:24,895:INFO:_master_model_container: 3
2023-04-28 20:38:24,895:INFO:_display_container: 2
2023-04-28 20:38:24,895:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-28 20:38:24,895:INFO:create_model() successfully completed......................................
2023-04-28 20:38:24,981:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:24,981:INFO:Creating metrics dataframe
2023-04-28 20:38:24,984:INFO:Initializing Decision Tree Classifier
2023-04-28 20:38:24,984:INFO:Total runtime is 0.10735408465067545 minutes
2023-04-28 20:38:24,986:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:24,986:INFO:Initializing create_model()
2023-04-28 20:38:24,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:24,986:INFO:Checking exceptions
2023-04-28 20:38:24,986:INFO:Importing libraries
2023-04-28 20:38:24,986:INFO:Copying training dataset
2023-04-28 20:38:24,990:INFO:Defining folds
2023-04-28 20:38:24,990:INFO:Declaring metric variables
2023-04-28 20:38:24,992:INFO:Importing untrained model
2023-04-28 20:38:24,993:INFO:Decision Tree Classifier Imported successfully
2023-04-28 20:38:24,995:INFO:Starting cross validation
2023-04-28 20:38:24,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:25,053:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,056:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,057:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,058:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,058:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,059:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,061:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,062:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,062:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,066:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,066:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,067:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,085:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,086:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,086:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,094:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,095:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,095:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,101:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,101:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,102:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,115:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,115:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,116:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,122:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,122:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,123:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,127:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,128:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,128:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,131:INFO:Calculating mean and std
2023-04-28 20:38:25,131:INFO:Creating metrics dataframe
2023-04-28 20:38:25,141:INFO:Uploading results into container
2023-04-28 20:38:25,141:INFO:Uploading model into container now
2023-04-28 20:38:25,141:INFO:_master_model_container: 4
2023-04-28 20:38:25,141:INFO:_display_container: 2
2023-04-28 20:38:25,141:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-04-28 20:38:25,141:INFO:create_model() successfully completed......................................
2023-04-28 20:38:25,229:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:25,229:INFO:Creating metrics dataframe
2023-04-28 20:38:25,233:INFO:Initializing SVM - Linear Kernel
2023-04-28 20:38:25,233:INFO:Total runtime is 0.11149858633677164 minutes
2023-04-28 20:38:25,235:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:25,235:INFO:Initializing create_model()
2023-04-28 20:38:25,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:25,235:INFO:Checking exceptions
2023-04-28 20:38:25,235:INFO:Importing libraries
2023-04-28 20:38:25,235:INFO:Copying training dataset
2023-04-28 20:38:25,239:INFO:Defining folds
2023-04-28 20:38:25,239:INFO:Declaring metric variables
2023-04-28 20:38:25,241:INFO:Importing untrained model
2023-04-28 20:38:25,242:INFO:SVM - Linear Kernel Imported successfully
2023-04-28 20:38:25,245:INFO:Starting cross validation
2023-04-28 20:38:25,246:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:25,298:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,299:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,299:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,300:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,307:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,308:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,308:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,309:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,320:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,320:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,322:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,323:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,327:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,327:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,328:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,330:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,331:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,331:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,332:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,332:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,343:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,344:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,344:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,345:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,349:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,349:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,350:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,350:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,357:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,358:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,358:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,359:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,364:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,364:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,365:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,365:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,374:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-04-28 20:38:25,374:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,374:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,375:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,381:INFO:Calculating mean and std
2023-04-28 20:38:25,382:INFO:Creating metrics dataframe
2023-04-28 20:38:25,392:INFO:Uploading results into container
2023-04-28 20:38:25,393:INFO:Uploading model into container now
2023-04-28 20:38:25,393:INFO:_master_model_container: 5
2023-04-28 20:38:25,393:INFO:_display_container: 2
2023-04-28 20:38:25,393:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-28 20:38:25,393:INFO:create_model() successfully completed......................................
2023-04-28 20:38:25,477:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:25,477:INFO:Creating metrics dataframe
2023-04-28 20:38:25,481:INFO:Initializing Ridge Classifier
2023-04-28 20:38:25,481:INFO:Total runtime is 0.11563550233840941 minutes
2023-04-28 20:38:25,482:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:25,483:INFO:Initializing create_model()
2023-04-28 20:38:25,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:25,483:INFO:Checking exceptions
2023-04-28 20:38:25,483:INFO:Importing libraries
2023-04-28 20:38:25,483:INFO:Copying training dataset
2023-04-28 20:38:25,486:INFO:Defining folds
2023-04-28 20:38:25,486:INFO:Declaring metric variables
2023-04-28 20:38:25,488:INFO:Importing untrained model
2023-04-28 20:38:25,489:INFO:Ridge Classifier Imported successfully
2023-04-28 20:38:25,492:INFO:Starting cross validation
2023-04-28 20:38:25,492:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:25,531:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,531:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,532:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,532:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,532:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,532:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,533:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,533:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,534:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,535:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,535:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,536:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,537:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,537:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,538:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,538:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,542:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,542:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,543:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,544:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,555:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,555:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,556:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,556:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,564:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,564:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,565:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,565:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,566:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,567:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,567:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,568:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,572:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,572:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,573:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,573:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,574:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-04-28 20:38:25,575:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,575:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,576:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,594:INFO:Calculating mean and std
2023-04-28 20:38:25,595:INFO:Creating metrics dataframe
2023-04-28 20:38:25,604:INFO:Uploading results into container
2023-04-28 20:38:25,604:INFO:Uploading model into container now
2023-04-28 20:38:25,604:INFO:_master_model_container: 6
2023-04-28 20:38:25,604:INFO:_display_container: 2
2023-04-28 20:38:25,604:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-04-28 20:38:25,604:INFO:create_model() successfully completed......................................
2023-04-28 20:38:25,687:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:25,687:INFO:Creating metrics dataframe
2023-04-28 20:38:25,691:INFO:Initializing Random Forest Classifier
2023-04-28 20:38:25,691:INFO:Total runtime is 0.11912726561228433 minutes
2023-04-28 20:38:25,692:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:25,692:INFO:Initializing create_model()
2023-04-28 20:38:25,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:25,692:INFO:Checking exceptions
2023-04-28 20:38:25,692:INFO:Importing libraries
2023-04-28 20:38:25,693:INFO:Copying training dataset
2023-04-28 20:38:25,697:INFO:Defining folds
2023-04-28 20:38:25,697:INFO:Declaring metric variables
2023-04-28 20:38:25,698:INFO:Importing untrained model
2023-04-28 20:38:25,699:INFO:Random Forest Classifier Imported successfully
2023-04-28 20:38:25,702:INFO:Starting cross validation
2023-04-28 20:38:25,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:25,849:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,849:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,850:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,850:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,850:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,851:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,851:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,852:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,852:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,856:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,857:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,857:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,857:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,859:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,860:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,882:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,883:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,883:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,883:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,883:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,883:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,884:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,884:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,884:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,970:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,971:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,971:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,974:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,975:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,976:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:25,980:INFO:Calculating mean and std
2023-04-28 20:38:25,981:INFO:Creating metrics dataframe
2023-04-28 20:38:25,990:INFO:Uploading results into container
2023-04-28 20:38:25,990:INFO:Uploading model into container now
2023-04-28 20:38:25,990:INFO:_master_model_container: 7
2023-04-28 20:38:25,990:INFO:_display_container: 2
2023-04-28 20:38:25,991:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-04-28 20:38:25,991:INFO:create_model() successfully completed......................................
2023-04-28 20:38:26,074:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:26,074:INFO:Creating metrics dataframe
2023-04-28 20:38:26,078:INFO:Initializing Quadratic Discriminant Analysis
2023-04-28 20:38:26,078:INFO:Total runtime is 0.12558596531550087 minutes
2023-04-28 20:38:26,079:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:26,080:INFO:Initializing create_model()
2023-04-28 20:38:26,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:26,080:INFO:Checking exceptions
2023-04-28 20:38:26,080:INFO:Importing libraries
2023-04-28 20:38:26,080:INFO:Copying training dataset
2023-04-28 20:38:26,083:INFO:Defining folds
2023-04-28 20:38:26,083:INFO:Declaring metric variables
2023-04-28 20:38:26,085:INFO:Importing untrained model
2023-04-28 20:38:26,086:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-28 20:38:26,088:INFO:Starting cross validation
2023-04-28 20:38:26,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:26,114:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,117:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,121:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,123:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,132:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,133:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,134:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,134:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,135:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,135:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,136:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,139:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,139:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,140:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,140:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,141:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,142:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,142:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,143:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,151:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,151:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,152:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,156:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,161:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,161:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,161:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,162:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,162:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,162:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,163:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,168:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-28 20:38:26,175:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,176:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,177:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,180:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,181:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,181:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,185:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,186:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,187:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,196:INFO:Calculating mean and std
2023-04-28 20:38:26,197:INFO:Creating metrics dataframe
2023-04-28 20:38:26,205:INFO:Uploading results into container
2023-04-28 20:38:26,206:INFO:Uploading model into container now
2023-04-28 20:38:26,206:INFO:_master_model_container: 8
2023-04-28 20:38:26,206:INFO:_display_container: 2
2023-04-28 20:38:26,206:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-28 20:38:26,206:INFO:create_model() successfully completed......................................
2023-04-28 20:38:26,290:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:26,290:INFO:Creating metrics dataframe
2023-04-28 20:38:26,294:INFO:Initializing Ada Boost Classifier
2023-04-28 20:38:26,294:INFO:Total runtime is 0.12918126980463662 minutes
2023-04-28 20:38:26,295:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:26,296:INFO:Initializing create_model()
2023-04-28 20:38:26,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:26,296:INFO:Checking exceptions
2023-04-28 20:38:26,296:INFO:Importing libraries
2023-04-28 20:38:26,296:INFO:Copying training dataset
2023-04-28 20:38:26,300:INFO:Defining folds
2023-04-28 20:38:26,300:INFO:Declaring metric variables
2023-04-28 20:38:26,301:INFO:Importing untrained model
2023-04-28 20:38:26,302:INFO:Ada Boost Classifier Imported successfully
2023-04-28 20:38:26,304:INFO:Starting cross validation
2023-04-28 20:38:26,305:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:26,396:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,397:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,397:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,400:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,401:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,401:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,402:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,403:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,403:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,403:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,403:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,404:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,404:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,404:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,405:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,419:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,420:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,421:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,427:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,427:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,428:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,428:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,428:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,428:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,474:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,474:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,475:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,476:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,476:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,477:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,483:INFO:Calculating mean and std
2023-04-28 20:38:26,484:INFO:Creating metrics dataframe
2023-04-28 20:38:26,493:INFO:Uploading results into container
2023-04-28 20:38:26,493:INFO:Uploading model into container now
2023-04-28 20:38:26,493:INFO:_master_model_container: 9
2023-04-28 20:38:26,493:INFO:_display_container: 2
2023-04-28 20:38:26,493:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-04-28 20:38:26,493:INFO:create_model() successfully completed......................................
2023-04-28 20:38:26,576:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:26,576:INFO:Creating metrics dataframe
2023-04-28 20:38:26,580:INFO:Initializing Gradient Boosting Classifier
2023-04-28 20:38:26,580:INFO:Total runtime is 0.1339461843172709 minutes
2023-04-28 20:38:26,581:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:26,581:INFO:Initializing create_model()
2023-04-28 20:38:26,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:26,581:INFO:Checking exceptions
2023-04-28 20:38:26,581:INFO:Importing libraries
2023-04-28 20:38:26,581:INFO:Copying training dataset
2023-04-28 20:38:26,585:INFO:Defining folds
2023-04-28 20:38:26,585:INFO:Declaring metric variables
2023-04-28 20:38:26,587:INFO:Importing untrained model
2023-04-28 20:38:26,588:INFO:Gradient Boosting Classifier Imported successfully
2023-04-28 20:38:26,590:INFO:Starting cross validation
2023-04-28 20:38:26,591:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:26,731:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,732:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,732:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,740:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,741:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,741:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,747:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,748:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,748:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,767:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,767:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,767:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,768:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,768:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,768:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,783:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,784:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,784:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,790:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,791:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,791:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,810:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,810:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,811:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,863:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,864:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,865:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,878:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,879:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,879:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:26,881:INFO:Calculating mean and std
2023-04-28 20:38:26,882:INFO:Creating metrics dataframe
2023-04-28 20:38:26,892:INFO:Uploading results into container
2023-04-28 20:38:26,892:INFO:Uploading model into container now
2023-04-28 20:38:26,892:INFO:_master_model_container: 10
2023-04-28 20:38:26,892:INFO:_display_container: 2
2023-04-28 20:38:26,893:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-28 20:38:26,893:INFO:create_model() successfully completed......................................
2023-04-28 20:38:26,975:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:26,975:INFO:Creating metrics dataframe
2023-04-28 20:38:26,979:INFO:Initializing Linear Discriminant Analysis
2023-04-28 20:38:26,979:INFO:Total runtime is 0.14059501489003498 minutes
2023-04-28 20:38:26,980:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:26,980:INFO:Initializing create_model()
2023-04-28 20:38:26,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:26,980:INFO:Checking exceptions
2023-04-28 20:38:26,980:INFO:Importing libraries
2023-04-28 20:38:26,980:INFO:Copying training dataset
2023-04-28 20:38:26,985:INFO:Defining folds
2023-04-28 20:38:26,985:INFO:Declaring metric variables
2023-04-28 20:38:26,986:INFO:Importing untrained model
2023-04-28 20:38:26,987:INFO:Linear Discriminant Analysis Imported successfully
2023-04-28 20:38:26,990:INFO:Starting cross validation
2023-04-28 20:38:26,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:27,043:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,044:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,045:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,050:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,051:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,051:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,051:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,051:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,052:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,052:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,052:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,052:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,054:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,055:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,055:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,059:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,059:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,060:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,063:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,064:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,064:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,064:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,065:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,065:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,101:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,101:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,102:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,102:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,103:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,103:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,110:INFO:Calculating mean and std
2023-04-28 20:38:27,110:INFO:Creating metrics dataframe
2023-04-28 20:38:27,119:INFO:Uploading results into container
2023-04-28 20:38:27,120:INFO:Uploading model into container now
2023-04-28 20:38:27,120:INFO:_master_model_container: 11
2023-04-28 20:38:27,120:INFO:_display_container: 2
2023-04-28 20:38:27,120:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-28 20:38:27,120:INFO:create_model() successfully completed......................................
2023-04-28 20:38:27,203:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:27,203:INFO:Creating metrics dataframe
2023-04-28 20:38:27,208:INFO:Initializing Extra Trees Classifier
2023-04-28 20:38:27,208:INFO:Total runtime is 0.14441189765930174 minutes
2023-04-28 20:38:27,209:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:27,209:INFO:Initializing create_model()
2023-04-28 20:38:27,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:27,209:INFO:Checking exceptions
2023-04-28 20:38:27,209:INFO:Importing libraries
2023-04-28 20:38:27,210:INFO:Copying training dataset
2023-04-28 20:38:27,213:INFO:Defining folds
2023-04-28 20:38:27,213:INFO:Declaring metric variables
2023-04-28 20:38:27,215:INFO:Importing untrained model
2023-04-28 20:38:27,216:INFO:Extra Trees Classifier Imported successfully
2023-04-28 20:38:27,218:INFO:Starting cross validation
2023-04-28 20:38:27,219:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:27,387:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,388:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,389:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,389:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,390:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,390:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,390:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,391:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,391:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,391:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,391:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,392:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,392:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,392:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,392:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,417:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,417:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,418:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,421:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,421:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,422:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,422:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,422:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,422:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,522:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,522:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,523:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,523:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,523:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,524:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,532:INFO:Calculating mean and std
2023-04-28 20:38:27,533:INFO:Creating metrics dataframe
2023-04-28 20:38:27,542:INFO:Uploading results into container
2023-04-28 20:38:27,542:INFO:Uploading model into container now
2023-04-28 20:38:27,542:INFO:_master_model_container: 12
2023-04-28 20:38:27,542:INFO:_display_container: 2
2023-04-28 20:38:27,542:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-04-28 20:38:27,542:INFO:create_model() successfully completed......................................
2023-04-28 20:38:27,626:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:27,626:INFO:Creating metrics dataframe
2023-04-28 20:38:27,630:INFO:Initializing Extreme Gradient Boosting
2023-04-28 20:38:27,630:INFO:Total runtime is 0.15144832134246825 minutes
2023-04-28 20:38:27,631:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:27,632:INFO:Initializing create_model()
2023-04-28 20:38:27,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:27,632:INFO:Checking exceptions
2023-04-28 20:38:27,632:INFO:Importing libraries
2023-04-28 20:38:27,632:INFO:Copying training dataset
2023-04-28 20:38:27,635:INFO:Defining folds
2023-04-28 20:38:27,635:INFO:Declaring metric variables
2023-04-28 20:38:27,636:INFO:Importing untrained model
2023-04-28 20:38:27,638:INFO:Extreme Gradient Boosting Imported successfully
2023-04-28 20:38:27,640:INFO:Starting cross validation
2023-04-28 20:38:27,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:27,710:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,710:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,711:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,712:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,713:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,714:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,715:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,715:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,716:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,717:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,718:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,718:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,731:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,732:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,733:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,743:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,744:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,744:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,745:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,745:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,745:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,757:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,757:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,758:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,760:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,761:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,762:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,769:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,770:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,770:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,772:INFO:Calculating mean and std
2023-04-28 20:38:27,772:INFO:Creating metrics dataframe
2023-04-28 20:38:27,782:INFO:Uploading results into container
2023-04-28 20:38:27,782:INFO:Uploading model into container now
2023-04-28 20:38:27,782:INFO:_master_model_container: 13
2023-04-28 20:38:27,782:INFO:_display_container: 2
2023-04-28 20:38:27,783:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-28 20:38:27,783:INFO:create_model() successfully completed......................................
2023-04-28 20:38:27,870:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:27,870:INFO:Creating metrics dataframe
2023-04-28 20:38:27,874:INFO:Initializing Light Gradient Boosting Machine
2023-04-28 20:38:27,874:INFO:Total runtime is 0.15551881790161132 minutes
2023-04-28 20:38:27,875:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:27,876:INFO:Initializing create_model()
2023-04-28 20:38:27,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:27,876:INFO:Checking exceptions
2023-04-28 20:38:27,876:INFO:Importing libraries
2023-04-28 20:38:27,876:INFO:Copying training dataset
2023-04-28 20:38:27,879:INFO:Defining folds
2023-04-28 20:38:27,879:INFO:Declaring metric variables
2023-04-28 20:38:27,881:INFO:Importing untrained model
2023-04-28 20:38:27,883:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-28 20:38:27,885:INFO:Starting cross validation
2023-04-28 20:38:27,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:27,998:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,998:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:27,999:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,004:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,005:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,005:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,008:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,008:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,008:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,009:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,009:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,009:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,023:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,024:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,025:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,025:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,026:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,027:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,042:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,043:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,043:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,053:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,054:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,054:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,092:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,093:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,093:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,100:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,100:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,101:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,103:INFO:Calculating mean and std
2023-04-28 20:38:28,103:INFO:Creating metrics dataframe
2023-04-28 20:38:28,113:INFO:Uploading results into container
2023-04-28 20:38:28,113:INFO:Uploading model into container now
2023-04-28 20:38:28,113:INFO:_master_model_container: 14
2023-04-28 20:38:28,113:INFO:_display_container: 2
2023-04-28 20:38:28,113:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-28 20:38:28,113:INFO:create_model() successfully completed......................................
2023-04-28 20:38:28,196:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:28,196:INFO:Creating metrics dataframe
2023-04-28 20:38:28,201:INFO:Initializing Dummy Classifier
2023-04-28 20:38:28,201:INFO:Total runtime is 0.16096825202306111 minutes
2023-04-28 20:38:28,202:INFO:SubProcess create_model() called ==================================
2023-04-28 20:38:28,203:INFO:Initializing create_model()
2023-04-28 20:38:28,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2c3256250>, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:28,203:INFO:Checking exceptions
2023-04-28 20:38:28,203:INFO:Importing libraries
2023-04-28 20:38:28,203:INFO:Copying training dataset
2023-04-28 20:38:28,207:INFO:Defining folds
2023-04-28 20:38:28,207:INFO:Declaring metric variables
2023-04-28 20:38:28,208:INFO:Importing untrained model
2023-04-28 20:38:28,210:INFO:Dummy Classifier Imported successfully
2023-04-28 20:38:28,212:INFO:Starting cross validation
2023-04-28 20:38:28,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-28 20:38:28,251:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,252:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,252:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,252:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,253:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,254:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,254:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,254:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,257:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,257:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,258:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,261:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,261:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,261:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,262:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,263:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,266:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,268:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,268:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,269:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,277:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,280:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,281:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,285:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,288:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,289:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,290:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,290:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,299:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,299:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,300:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,300:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,302:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,303:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,303:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,303:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,303:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,304:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,304:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-28 20:38:28,304:WARNING:/Users/limuqing/anaconda3/envs/tf_env/lib/python3.9/site-packages/sklearn/metrics/_classification.py:1396: UserWarning: Note that pos_label (set to 3.0) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-04-28 20:38:28,315:INFO:Calculating mean and std
2023-04-28 20:38:28,316:INFO:Creating metrics dataframe
2023-04-28 20:38:28,325:INFO:Uploading results into container
2023-04-28 20:38:28,325:INFO:Uploading model into container now
2023-04-28 20:38:28,325:INFO:_master_model_container: 15
2023-04-28 20:38:28,325:INFO:_display_container: 2
2023-04-28 20:38:28,325:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-04-28 20:38:28,325:INFO:create_model() successfully completed......................................
2023-04-28 20:38:28,409:INFO:SubProcess create_model() end ==================================
2023-04-28 20:38:28,409:INFO:Creating metrics dataframe
2023-04-28 20:38:28,417:INFO:Initializing create_model()
2023-04-28 20:38:28,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x2b1d0e910>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-28 20:38:28,417:INFO:Checking exceptions
2023-04-28 20:38:28,417:INFO:Importing libraries
2023-04-28 20:38:28,417:INFO:Copying training dataset
2023-04-28 20:38:28,420:INFO:Defining folds
2023-04-28 20:38:28,421:INFO:Declaring metric variables
2023-04-28 20:38:28,421:INFO:Importing untrained model
2023-04-28 20:38:28,421:INFO:Declaring custom model
2023-04-28 20:38:28,421:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-28 20:38:28,421:INFO:Cross validation set to False
2023-04-28 20:38:28,421:INFO:Fitting Model
2023-04-28 20:38:29,471:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-28 20:38:29,471:INFO:create_model() successfully completed......................................
2023-04-28 20:38:29,567:INFO:_master_model_container: 15
2023-04-28 20:38:29,567:INFO:_display_container: 2
2023-04-28 20:38:29,567:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-28 20:38:29,567:INFO:compare_models() successfully completed......................................
